
extra_c_flags_386       = -zp4

!ifndef cg_autodepends
cg_autodepends = .AUTODEPEND
!endif

!ifeq sys_dll 1
extra_c_flags   = -D_CGDLL
!endif

track_flags_i86 = -D_TRACK -of+
track_flags_386 = -D_TRACK -of+
track_flags_axp = -D_TRACK

!ifeq cg_trmem 1
extra_c_flags_memmgt    = $(track_flags_$(host_cpu))
extra_c_flags_memwrap   = $(track_flags_$(host_cpu))
extra_c_flags_trmem     = $(track_flags_$(host_cpu))
!endif

!ifeq release 0
!else
std_defines = -DNDEBUG
!endif

!ifdef %CGEXTRAOPTS
opt_standard += $(%CGEXTRAOPTS)
!endif

inc_dirs += -I. $(inc_dirs_targ) -I"$(dwarf_dir)/dw/h" $(mem_include)

.c: $(src_path);$(trmem_dir)
.h: $(include_path)
.asm: $(asm_path)

libfile: .PROCEDURE
        rm -f $^&.lbc
!ifdef bootstrap
# to be fixed: wlib -fa now produces a library that gnu ld can't read
# can be a bug in wlib or in gnu ld, I don't know right now...
        ar crs $^. $<
!else
        @for %i in ($<) do @%append $^&.lbc +%i
        $(librarian) $(libflags) $^. @$^&.lbc
!endif

!ifdef bootstrap
bitset_opts = -o $@ -g
protos_opts = -E -traditional -o $@
!else ifdef __UNIX__
bitset_opts = -fo=.obj -fe=$@ -d2
protos_opts = -p -fo=$@
!else
bitset_opts = -fe=$@ -d2
protos_opts = -p -fo=$@
!endif

./bitset.exe : $(watcom_dir)/c/bitset.c
    $(bld_cl) $(bitset_opts) $[@

gbit.gh : ./bitset.exe $(cg_dir)/mif/cg.mif
    $[@ $(gbit_size) _GBit global_bit_set $@

lbit.gh : ./bitset.exe $(cg_dir)/mif/cg.mif
    $[@ $(lbit_size) _LBit local_bit_set $@

dbit.gh : ./bitset.exe $(cg_dir)/mif/cg.mif
    $[@ $(dbit_size) _DBit dom_bit_set $@

cgprotos.gh : $(cg_dir)/h/cgapicvr.h $(cg_dir)/h/cgfuntab.h
    $(cc) $(protos_opts) $[@ -I"$(cg_dir)/h"

feprotos.gh : $(cg_dir)/h/cgfecvr.h $(cg_dir)/h/cgfertns.h
    $(cc) $(protos_opts) $[@ -I"$(cg_dir)/h"
