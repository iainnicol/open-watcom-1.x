/*
 *  netdb.h      Net database functions.
 *
:include crwat.sp
 */
#ifndef _NETDB_H_INCLUDED
#define _NETDB_H_INCLUDED
#include <sys/socket.h>        /* for AF_INET */
:include readonly.sp
:include cpluspro.sp
:include lnxkpack.sp

struct protoent {
    char    *p_name;        /* official protocol name */
    char    **p_aliases;    /* alias list */
    int     p_proto;        /* protocol number */
};

struct servent {
    char    *s_name;        /* official service name */
    char    **s_aliases;    /* alias list */
    int     s_port;         /* port number */
    char    *s_proto;       /* protocol to use */
};


struct hostent {
    char    *h_name;        /* official name of host */
    char    **h_aliases;    /* alias list */
    int     h_addrtype;     /* host address type */
    int     h_length;       /* length of address */
    char    **h_addr_list;  /* list of addresses */
};
#define h_addr  h_addr_list[0]  /* for backward compatibility */

_WCRTLINK extern int h_errno;

_WCRTLINK extern struct protoent * _WRTLCALL getprotoent( void );
_WCRTLINK extern struct protoent * _WRTLCALL getprotobyname( const char *__name );
_WCRTLINK extern struct protoent * _WRTLCALL getprotobynumber( int __proto );
_WCRTLINK extern void            _WRTLCALL setprotoent( int __stayopen );
_WCRTLINK extern void            _WRTLCALL endprotoent( void );

_WCRTLINK extern struct servent  * _WRTLCALL getservent( void );
_WCRTLINK extern struct servent  * _WRTLCALL getservbyname( const char *__name, const char *__proto );
_WCRTLINK extern struct servent  * _WRTLCALL getservbyport( int __port, const char *__proto );
_WCRTLINK extern void            _WRTLCALL setservent( int __stayopen );
_WCRTLINK extern void            _WRTLCALL endservent( void );

_WCRTLINK extern struct hostent  * _WRTLCALL gethostbyname( const char *__name );
_WCRTLINK extern struct hostent  * _WRTLCALL gethostbyaddr( const char *__addr, int __len, int __type );
_WCRTLINK extern void            _WRTLCALL sethostent( int __stayopen );
_WCRTLINK extern void            _WRTLCALL endhostent( void );
_WCRTLINK extern void            _WRTLCALL herror( const char *__s );
_WCRTLINK extern const char      * _WRTLCALL hstrerror( int __err );

:include poppack.sp
:include cplusepi.sp
#endif /* !_NETDB_H_INCLUDED */

