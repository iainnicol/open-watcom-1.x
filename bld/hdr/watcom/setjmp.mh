/*
 *  setjmp.h
 *
:include crwatqnx.sp
 */
#ifndef _SETJMP_H_INCLUDED
#define _SETJMP_H_INCLUDED
:include readonly.sp
:include cpluspro.sp

#ifndef _COMDEF_H_INCLUDED
 #include <_comdef.h>
#endif

:segment !QNX
#if defined(__PPC__)
 typedef unsigned int jmp_buf[1];
#elif defined(__AXP__)
 typedef double jmp_buf[24];
#else
:endsegment
 typedef unsigned int jmp_buf[13];
:segment !QNX
#endif
:endsegment

_WCRTLINK extern int  _setjmp( jmp_buf __env );
_WCRTLINK extern void longjmp( jmp_buf __env, int __val );

#if !defined(_SETJMPEX_H_INCLUDED_)
 #define setjmp(__env)  _setjmp(__env)
#endif

:segment QNX
#if defined(__386__)
:elsesegment
#if defined(__PPC__)
#elif defined(__AXP__)
#elif defined(__386__)
:endsegment
 #pragma aux _setjmp __parm __caller [__eax] __modify [__8087];
 #ifndef __SW_3R
  #pragma aux longjmp __aborts;
 #endif
#else
 #pragma aux _setjmp __modify [__8087];
 #pragma aux longjmp __aborts;
#endif

:segment QNX
#if defined(_POSIX_SOURCE) || defined(_QNX_SOURCE) || !defined(NO_EXT_KEYS)
:include pshpackl.sp
typedef struct {
    int         __flg;
    long        __msk;
    jmp_buf     __buf;
} sigjmp_buf[1];
:include poppack.sp

extern void __sigjmpsave( sigjmp_buf __env, int __msk );
extern void siglongjmp( sigjmp_buf __env, int __val );

#define sigsetjmp( __env, __msk ) ( __sigjmpsave( __env, __msk ), \
                                    _setjmp( (__env)[0].__buf ) )

#pragma aux siglongjmp __aborts;

#endif
:endsegment

:include cplusepi.sp
#endif
