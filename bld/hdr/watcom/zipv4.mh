/*
 *  zipv4.h
 *
:include crwat.sp
 */
#ifndef _ZIPV4_H_INCLUDED
#define _ZIPV4_H_INCLUDED

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
#pragma pack(__push,1);

/* Supported socket types */

#define SOCKET_TCP              0    /* TCP connection */
#define SOCKET_UDP              1    /* UDP connection */
#define SOCKET_RAW              2    /* RAW connection */

/* Link layer flags */

#define LINK_FLAGS_RUNNING      1    /* Link is up and running */
#define LINK_FLAGS_BROADCAST    2    /* Link supports broadcast */

/* Link layer types */

#define LINK_LOOPBACK           0    /* Link is a loopback interface */
#define LINK_BLUEBOOK           1    /* Link is a bluebook interface (standard ethernet) */

/* Link information block */

typedef struct
{
   unsigned int     Address;         /* Link layer address in network order */
   unsigned int     Netmask;         /* Link layer netmask in network order */
   unsigned int     Gateway;         /* Link layer gateway address in network order */
   unsigned char    LinkType;        /* Link layer type */
   unsigned char    LinkLength;      /* Link layer address length */
   unsigned char    LinkAddress[6];  /* Link layer address */
   unsigned char    LinkSize;        /* Link layer header size */
   unsigned char    Interface;       /* Packet driver interface number */
   unsigned short   MTU;             /* MTU size */
} LINKINFO;

/* ZIPV4 functions */

int DosSocketOpen( int sockettype, int protocol, unsigned *handle );
int DosSocketClose( unsigned handle );
int DosSocketAccept( unsigned listenhandle, unsigned *newhandle );
int DosSocketBind( int port, unsigned ip, unsigned handle );
int DosSocketConnect( int port, unsigned ip, unsigned handle );
int DosSocketListen( unsigned handle );
int DosSocketShutdown( int how, unsigned handle );
int DosSocketReceive( int flags, void *buffer, unsigned handle, int length );
int DosSocketReceiveFrom( int flags, void *buffer, unsigned handle,
                          int length, unsigned *ip, int *port );
int DosSocketSend( int flags, void *buffer, unsigned handle, int length );
int DosSocketSendTo( int flags, void *buffer, unsigned handle, int length,
                     unsigned ip, int port );
int DosSocketGetOption( int level, unsigned *value, unsigned handle,
                        int option );
int DosSocketSetOption( int level, unsigned value, unsigned handle,
                        int option );
int DosSocketSelect( unsigned ticks, unsigned *readset, unsigned *writeset,
                     unsigned *exceptset );
int DosSocketIoctl( unsigned command, unsigned *argument, unsigned handle );
int DosSocketRemoteAddress( unsigned *ip, int *port, unsigned handle );
int DosSocketLocalAddress( unsigned *ip, int *port, unsigned handle );
int DosLinkOpen( int pktdrvno, unsigned gateway, unsigned ip,
                 unsigned netmask );
int DosLinkClose( int linkno );
int DosLinkInformation( int linkno, LINKINFO *linkinfo );

#pragma pack(__pop);
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif
