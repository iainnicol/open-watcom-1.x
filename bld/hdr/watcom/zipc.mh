/*
 *  zipc.h
 *
:include crwat.sp
 */
#ifndef _ZIPC_H_INCLUDED
#define _ZIPC_H_INCLUDED
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */
#pragma pack(__push,1);

/* Structures */

#if defined(__ZDOSDRV__)

typedef struct
{
   unsigned int Reserved[4];            /* Reserved by ZDOS */
} MUTEX;

typedef struct
{
   unsigned int Reserved[4];            /* Reserved by ZDOS */
} SEMAPHORE;

typedef struct
{
   unsigned int Reserved[4];            /* Reserved by ZDOS */
} EVENT;

typedef struct
{
   unsigned int Reserved[6];            /* Reserved by ZDOS */
} PIPE;

#else

typedef struct
{
   unsigned int Reserved[8];            /* Reserved by ZDOS */
} MUTEX;

typedef struct
{
   unsigned int Reserved[8];            /* Reserved by ZDOS */
} SEMAPHORE;

typedef struct
{
   unsigned int Reserved[8];            /* Reserved by ZDOS */
} EVENT;

typedef struct
{
   unsigned int Reserved[10];           /* Reserved by ZDOS */
} PIPE;

#endif

/* Local IPC functions */

int DosOpenMutex( MUTEX *mutex );
int DosCloseMutex( MUTEX *mutex );
int DosWaitMutex( MUTEX *mutex );
int DosWaitMutexTimeOut( MUTEX *mutex, unsigned timeout );
int DosSignalMutex( MUTEX *mutex );
int DosOpenSemaphore( SEMAPHORE *semaphore, unsigned value );
int DosCloseSemaphore( SEMAPHORE *semaphore );
int DosWaitSemaphore( SEMAPHORE *semaphore );
int DosWaitSemaphoreTimeOut( SEMAPHORE *semaphore, unsigned timeout );
int DosSignalSemaphore( SEMAPHORE *semaphore );
int DosOpenEvent( EVENT *event, unsigned value );
int DosCloseEvent( EVENT *event );
int DosWaitEvent( int flags, unsigned bitmask, EVENT *event );
int DosWaitEventTimeOut( int flags, unsigned bitmask, EVENT *event,
                         unsigned timeout );
int DosSetEvent( unsigned bitmask, EVENT *event );
int DosClearEvent( unsigned bitmask, EVENT *event );
int DosOpenPipe( PIPE *pipe );
int DosClosePipe( PIPE *pipe );
int DosReadPipe( int bytes, void *buffer, PIPE *pipe );
int DosReadPipeTimeOut( int bytes, void *buffer, PIPE *pipe,
                        unsigned timeout );
int DosWritePipe( int bytes, void *buffer, PIPE *pipe );
int DosWritePipeTimeOut( int bytes, void *buffer, PIPE *pipe,
                         unsigned timeout );

/* Glocal IPC functions */

#if !defined(__ZDOSDRV__)
int DosCreateGlobalMutex( char *name );
int DosOpenGlobalMutex( char *name );
int DosCloseGlobalMutex( int handle );
int DosWaitGlobalMutex( int handle );
int DosWaitGlobalMutexTimeOut( int handle, unsigned timeout );
int DosSignalGlobalMutex( int handle );
int DosCreateGlobalSemaphore( char *name, unsigned value );
int DosOpenGlobalSemaphore( char *name );
int DosCloseGlobalSemaphore( int handle );
int DosWaitGlobalSemaphore( int handle );
int DosWaitGlobalSemaphoreTimeOut( int handle, unsigned timeout );
int DosSignalGlobalSemaphore( int handle );
int DosCreateGlobalEvent( char *name, unsigned value );
int DosOpenGlobalEvent( char *name );
int DosCloseGlobalEvent( int handle );
int DosWaitGlobalEvent( int flags, unsigned bitmask, int handle );
int DosWaitGlobalEventTimeOut( int flags, unsigned bitmask, int handle,
                               unsigned timeout );
int DosSetGlobalEvent( unsigned bitmask, int handle );
int DosClearGlobalEvent( unsigned bitmask, int handle );
int DosCreateGlobalPipe( char *name );
int DosOpenGlobalPipe( char *name );
int DosCloseGlobalPipe( int handle );
int DosReadGlobalPipe( int bytes, void *buffer, int handle );
int DosReadGlobalPipeTimeOut( int bytes, void *buffer, int handle,
                              unsigned timeout );
int DosWriteGlobalPipe( int bytes, void *buffer, int handle );
int DosWriteGlobalPipeTimeOut( int bytes, void *buffer, int handle,
                               unsigned timeout );
#endif

#pragma pack(__pop);
#ifdef __cplusplus
};
#endif /* __cplusplus */
#endif
