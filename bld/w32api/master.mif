proj_name = w32api

!include cproj.mif

.EXTENSIONS : .lbc .def

libs =               &
        advapi32.lib &
        avicap32.lib &
        avifil32.lib &
        cap.lib &
        comctl32.lib &
        comdlg32.lib &
        crypt32.lib &
        ctl3d32.lib &
        dhcpcsvc.lib &
        dlcapi.lib &
        faultrep.lib &
        gdi32.lib &
        glaux.lib &
        glu32.lib &
        glut.lib &
        glut32.lib &
        igmpagnt.lib &
        imagehlp.lib &
        imm32.lib &
        iphlpapi.lib &
        kernel32.lib &
        largeint.lib &
        lz32.lib &
        mapi32.lib &
        mfcuia32.lib &
        mgmtapi.lib &
        mpr.lib &
        msacm32.lib &
        msimg32.lib &
        msvcp60.lib &
        msvfw32.lib &
        mswsock.lib &
        nddeapi.lib &
        netapi32.lib &
        ntdll.lib &
        odbc32.lib &
        odbccp32.lib &
        ole32.lib &
        oleacc.lib &
        oleaut32.lib &
        olecli32.lib &
        oledlg.lib &
        olepro32.lib &
        olesvr32.lib &
        opengl32.lib &
        penwin32.lib &
        pkpd32.lib &
        powrprof.lib &
        psapi.lib &
        rapi.lib &
        rasapi32.lib &
        rasdlg.lib &
        rpcdce4.lib &
        rpcns4.lib &
        rpcrt4.lib &
        scrnsave.lib &
        secur32.lib &
        setupapi.lib &
        shell32.lib &
        shfolder.lib &
        shlwapi.lib &
        snmpapi.lib &
        svrapi.lib &
        tapi32.lib &
        th32.lib &
        thunk32.lib &
        url.lib &
        uuid.lib &
        user32.lib &
        userenv.lib &
        uxtheme.lib &
        vdmdbg.lib &
        version.lib &
        vfw32.lib &
        win32spl.lib &
        wininet.lib &
        winmm.lib &
        winspool.lib &
        winstrm.lib &
        wldap32.lib &
        wow32.lib &
        ws2_32.lib &
        wsnmp32.lib &
        wsock32.lib &
        wst.lib

.def: ../lib

.c: ../lib

.def.lbc:
        $(vi) -s ../def2lbc.vi -p"../lib/$[. $*"

.lbc.lib:
        $(librarian) -b -c -n -io -ii $@ @$<

.obj.lib:
        $(librarian) -b -c -n $@ $<

.c.obj:
        $(cc) $(cflags) -fpc -fo=.obj -i"$(inc_dirs)" $<

# the __UNIX__ has to be here until at least "for" is fixed in wmake for UNIX:
# wmake exploits the special WATCOM readdir(wildcard) property...
all: $(libs) .SYMBOLIC
!ifdef __UNIX__
        /bin/sh -c "for i in ../include/*.h; do wmake -h -f ../fix/new_h.mif file=$$i; done"
        /bin/sh -c "for i in ../include/GL/*.h; do wmake -h -f ../fix/new_h.mif file=$$i; done"
!else
        @for %i in (../include/*.h) do @wmake -h -f ../fix/new_h.mif file=%i
        @for %i in (../include/GL/*.h) do @wmake -h -f ../fix/new_h.mif file=%i
!endif
        $(vi) -s ../fix/fix_h.vi

kernel32.lib: kernel32.lbc
        $(librarian) -b -c -n -io -ii $@ @$<

dinput.lib: dinput.lbc dinput.obj
        $(librarian) -b -c -n -io -ii $@ @$[@
        $(librarian) -b -c $@ +$]@

shell32.lib: shell32.lbc shell32.obj
        $(librarian) -b -c -n -io -ii $@ @$[@
        $(librarian) -b -c $@ +$]@

vfw32.lib: msvfw32.lib avicap32.lib avifil32.lib
        $(librarian) -b -c -n $@ +msvfw32.lib +avicap32.lib +avifil32.lib

uuid.lib: uuid.obj mshtml-u.obj

clean : .SYMBOLIC
        @rm -f *.?bj *.lib *.lbc 
        @rm -f include/*.h include/GL/*.h
