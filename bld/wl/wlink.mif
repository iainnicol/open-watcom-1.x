# the linker master make file
#
# This depends on the following projects:
# orl, plusplus, dwarf, watcom, and trmem

proj_name = wlink

!ifndef wlink_autodepends
wlink_autodepends = .AUTODEPEND
!endif

# get rid of the -zc
suppress_zc = 1

wlink_nosymfile = 1

!include cproj.mif
!include defrule.mif
!include deftarg.mif

!include $(orl_dir)/client.mif
!include wres.mif
!include $(dwarf_dir)/dw/client.mif

!include trmem.mif

!include ../wlobjs.mif

comp_objs_exe = $(common_objs) $(exe_objs)
comp_objs_dll = $(common_objs) $(dll_objs)

inc_dirs = -I. -I"../h"

.c: ../c;$(watcom_dir)/c;$(wrc_dir)/c;$(lib_misc_dir)/c;$(trmem_dir)

################
# c flags stuff

force_include = -fi
!ifeq bootstrap 1
force_include = -include
!endif

!ifeq bootstrap 1
extra_c_flags = -I"$(lib_misc_dir)/h"
!else
extra_c_flags = -zp4
!ifdef wlink_dll
extra_c_flags += -D_DLLHOST
!else ifdef wlink_rtdll
extra_c_flags += -D_DLLHOST
!endif
!ifeq use_virtmem 1
extra_c_flags += -DUSE_VIRTMEM
!endif
!endif

extra_c_flags_ntio       = -I"$(wres_dir)/h"
extra_c_flags_posixio    = -I"$(wres_dir)/h"
extra_c_flags_linkio     = -I"$(wres_dir)/h"
extra_c_flags_objorl     = -I"$(orl_dir)/h"
extra_c_flags_dbgdwarf   = -I"$(dwarf_dir)/dw/h"
!ifdef wlink_trmem
extra_c_flags_debug      = -DTRMEM
!endif
extra_c_flags_loadpe     = -DINSIDE_WLINK -I. -I"../h" -I"$(wrc_dir)/h" -I"$(wres_dir)/h"
extra_c_flags_loados2    = -I"$(wres_dir)/h"
extra_c_flags_demangle   = -I"$(lib_misc_dir)/h"
extra_c_flags_dllentry   = -bd
extra_c_flags_idedrv     = -DCHAIN_CALLBACK
extra_c_flags_msg        = -I"$(lib_misc_dir)/h"
extra_c_flags_rcstr      = -DINSIDE_WLINK -I"$(wrc_dir)/h" -I"$(wres_dir)/h" -I"$(watcom_dir)/h" $(force_include)"../h/wlrcmem.h"
extra_c_flags_exerespe   = -DINSIDE_WLINK -I"$(wrc_dir)/h" -I"$(wres_dir)/h" -I"$(watcom_dir)/h"
extra_c_flags_sharedio   = -DINSIDE_WLINK -I"$(wrc_dir)/h" -I"$(wres_dir)/h" -I"$(watcom_dir)/h"
extra_c_flags_stidedrv   = -DSTATIC_LINKAGE -I"$(watcom_dir)/c"
extra_c_flags_trmem      = $(trmem_cflags)
extra_c_flags_mem        = $(trmem_cover_cflags)

#####################
# linker .EXE options

extra_l_flags     = op map, noredefs, symfile

extra_l_flags_qnx = op res=wlink.u, st=24k, off=32k

#####################
# linker .DLL options

!ifeq release 0
extra_l_flags_dll = OPTION map, noredefs
!else
extra_l_flags_dll = OPTION map, noredefs, symfile
!endif
extra_l_flags_dll_nt = initinstance terminstance op modname='wlink.dll'
extra_l_flags_dll_nt += reference __DLLstart_ op offset=0x69c00000
extra_l_flags_dll_os2 = initinstance terminstance op modname='wlink'

!ifeq bootstrap 1
xlibs = $(wres_lib) $(dwarf_dw_lib) $(orl_lib) $(clib_dir)/$(%OBJDIR)/libwatcom.a
!else
xlibs = $(wres_lib) $(dwarf_dw_lib) $(orl_lib)
!endif

###########
# rc stuff

extra_rc_flags_qnx = -D_UNIX
extra_rc_flags_linux = -D_UNIX
extra_rc_flags = $(extra_rc_flags_$(host_os))

# systems where version resources must be added to .DLL
build_rc_nt_386 = nt

!ifdef build_rc_$(host_os)_$(host_cpu)
rc_objs = version.rc
!endif

#################
# explicit rules

!ifdef wlink_dll

wl.exe : $(drv_objs) wlink.lib drv.lnk
    $(linker) name $@ @drv.lnk

!else

wl.exe : wlink.res $(comp_objs_exe) $(xlibs) exe.lnk
!ifeq bootstrap 1
    $(cc) -o $@ $(comp_objs_exe) $(xlibs)
!else
    $(linker) name $@ @exe.lnk
!endif
    wstrip -q -a -r $@ . wlink.res

!endif

wl.dll : wlink.res $(comp_objs_dll) $(xlibs) $(rc_objs) dll.lnk
    $(linker) name $@ @dll.lnk
!ifdef build_rc_$(host_os)_$(host_cpu)
    $(rc) -bt=$(build_rc_$(host_os)_$(host_cpu)) $(inc_path) version.rc $@
!endif
    wstrip -q -a -r $@ . wlink.res

wlink.lib : wl.dll
    $(librarian) -n $@ +$<

drv.lnk: $(__MAKEFILES__)
    @%write $@ $(lflags)
    @for %i in ($(drv_objs)) do @%append $@ file %i
    @%append $@ lib wlink.lib

exe.lnk: $(__MAKEFILES__)
    @%write $@ $(lflags)
!ifdef wlink_rtdll
    @for %i in ($(rtdll_libpath)) do @%append $@ libpath %i
!endif
    @for %i in ($(comp_objs_exe)) do @%append $@ file %i
    @for %i in ($(xlibs)) do @%append $@ lib %i

dll.lnk: $(__MAKEFILES__)
    @%write $@ $(lflags_dll)
!ifdef wlink_rtdll
    @for %i in ($(rtdll_libpath)) do @%append $@ libpath %i
!endif
    @for %i in ($(comp_objs_dll)) do @%append $@ file %i
    @for %i in ($(xlibs)) do @%append $@ lib %i

#################
# auxiliary rules

./genverrc.exe : $(fe_misc_dir)/c/genverrc.c
        $(bld_cl) $[@ $(wcl_util_opts) -D_VERSION=$(bld_ver)

!ifndef patch_level
patch_level=0
!endif

version.rc : ./genverrc.exe ../h/wlver.rc $(fe_misc_dir)/c/genverrc.c
        $[@ ../h/wlver.rc version.rc $$ wlink.dll $(patch_level)

wlink.res : rcmsg.gh ../h/wlink.msg ../h/lnkerror.rc ../h/wlnkmsg.h ../h/lnkerror.msg ../h/wlink.rc
        $(rc_aui) $(extra_rc_flags) -I"$(wrc_dir)/h" $]@ -fo=$@

rcmsg.gh : $(wrc_dir)/h/rc.msg
!ifdef __LINUX__
        perl $(sdk_dir)/misc/msgtoh.pl < $[@ | sed 's/0$$/800/' > rcmsg.gh
!else
        $(vi) -s $(sdk_dir)/misc/msgtoh.vi -p"rcmsg.gh" $[@
        $(vi) -s ../h/rcrebase.vi rcmsg.gh
!endif
