# the linker master make file
#
# This depends on the following projects:
# orl, plusplus, dwarf, watcom, and trmem

proj_name = wlink

!ifndef wlink_autodepends
wlink_autodepends = .AUTODEPEND
!endif

# systems where version resources must be added to .DLL
build_rc_nt_386 = nt

# get rid of the -zc
suppress_zc = 1
suppress_bd = 1

!include cproj.mif
!include defrule.mif
!include deftarg.mif

!include $(orl_dir)/client.mif
!include wres.mif
!include $(dwarf_dir)/dw/client.mif

.ERASE

inc_dirs = .;../h;

.c: ../c;$(watcom_dir)/c;$(wrc_dir)/c;$(lib_misc_dir)/c;$(trmem_dir)

!ifndef patch_level
patch_level=0
!endif

!ifeq release 0
wlink_trmem = 1
!endif

!ifdef build_rc_$(host_os)_$(host_cpu)
rc_objs = version.rc
!endif

# first, set up the list of object files

template = &
autogrp.$(ext) &
carve.$(ext) &
wcomdef.$(ext) &
cmdall.$(ext) &
cmddos.$(ext) &
cmdelf.$(ext) &
cmdline.$(ext) &
cmdnov.$(ext) &
cmdos2.$(ext) &
cmdphar.$(ext) &
cmdtable.$(ext) &
cmdutils.$(ext) &
cmdqnx.$(ext) &
dbgall.$(ext) &
dbgcv.$(ext) &
dbgdwarf.$(ext) &
dbginfo.$(ext) &
debug.$(ext) &
distrib.$(ext) &
global.$(ext) &
hash.$(ext) &
impexp.$(ext) &
libr.$(ext) &
libsupp.$(ext) &
linkutil.$(ext) &
loaddos.$(ext) &
loadelf.$(ext) &
loadelf2.$(ext) &
loadfile.$(ext) &
loadflat.$(ext) &
loadnov.$(ext) &
loados2.$(ext) &
loadpe.$(ext) &
loadphar.$(ext) &
loadqnx.$(ext) &
mapio.$(ext) &
mixcache.$(ext) &
msg.$(ext) &
objio.$(ext) &
obj2supp.$(ext) &
objcalc.$(ext) &
objfree.$(ext) &
objnode.$(ext) &
objomf.$(ext) &
objorl.$(ext) &
objpass1.$(ext) &
objpass2.$(ext) &
objstrip.$(ext) &
omfreloc.$(ext) &
overlays.$(ext) &
ovlsupp.$(ext) &
permdata.$(ext) &
procfile.$(ext) &
reloc.$(ext) &
ring.$(ext) &
ring2.$(ext) &
salloc.$(ext) &
spillio.$(ext) &
strtab.$(ext) &
symmem.$(ext) &
symtab.$(ext) &
symtrace.$(ext) &
toc.$(ext) &
wlink.$(ext) &
wlnkmsg.$(ext) &
demangle.$(ext) &
exerespe.$(ext) &
sharedio.$(ext) &
rcstr.$(ext)

ext = obj
c_objs = $+$(template)$-

stub_objs = dlldrvr.obj stubidedrv.obj idemsgfm.obj drvmsgpr.obj

libs = $(wres_lib) $(dwarf_dw_lib) $(orl_lib)

!ifeq host_os dos
extra_objs = linkio.obj virtmem.obj
!else
!ifeq host_os qnx
extra_objs = posixio.obj virtmem.obj
!else
!ifeq host_os linux
extra_objs = posixio.obj virtpage.obj
!else
extra_objs = ntio.obj virtpage.obj
!endif
!endif
!endif

!ifeq sys_dll 1
extra_objs += dllentry.obj idemsgpr.obj idedrv.obj
!endif

extra_objs += mem.obj
!ifeq wlink_trmem 1
extra_objs += trmem.obj
!endif

################
# c flags stuff

# now get all of the c flags set properly

!ifeq release 0
cflags_axp = -hc
!endif

force_include = -fi
!ifeq bootstrap 1
force_include = -include
!endif

extra_c_flags = -zp4

extra_c_flags_i86 = -fpc
extra_c_flags_386 = -fpc

extra_c_flags_ntio       = -I"$(wres_dir)/h"
extra_c_flags_posixio    = -I"$(wres_dir)/h"
extra_c_flags_linkio     = -I"$(wres_dir)/h"
extra_c_flags_objorl     = -I"$(orl_dir)/h"
extra_c_flags_dbgdwarf   = -I"$(dwarf_dir)/dw/h"
extra_c_flags_loadpe     = -I. -I"../h" -I"$(wrc_dir)/h" -I"$(wres_dir)/h" -DINSIDE_WLINK
extra_c_flags_loados2    = -I"$(wres_dir)/h"
extra_c_flags_demangle   = -I"$(lib_misc_dir)/h"
extra_c_flags_idedrv     = -dCHAIN_CALLBACK
extra_c_flags_msg        = -I"$(lib_misc_dir)/h"
extra_c_flags_rcstr      = -I"$(wrc_dir)/h" -I"$(wres_dir)/h" -I"$(watcom_dir)/h" $(force_include)"../h/wlrcmem.h" -DINSIDE_WLINK
extra_c_flags_exerespe   = -I"$(wrc_dir)/h" -I"$(wres_dir)/h" -I"$(watcom_dir)/h" -DINSIDE_WLINK
extra_c_flags_sharedio   = -I"$(wrc_dir)/h" -I"$(wres_dir)/h" -I"$(watcom_dir)/h" -DINSIDE_WLINK
extra_c_flags_stubidedrv = -dSTATIC_LINKAGE -fo=$^&.obj
extra_c_flags_drvmsgpr   = -fo=$^&.obj
extra_c_flags_trmem      = -I"$(trmem_dir)"

!ifeq wlink_trmem 1
extra_c_flags_mem = -dTRACKER -I"$(trmem_dir)"
!ifneq host_cpu axp
extra_c_flags_mem += -of+
!endif
!endif

!ifdef sys_dll
# invoke -bd switch for one module in dll
extra_c_flags_wlink = -bd
!endif

#####################
# linker flags stuff

# now get all of the linker flags set properly

ldebug_386 = debug dwarf  # file $(stkdepth_dir)/stkd386.lib

extra_l_flags =  op map=wl,verbose,static,noredefs

!ifdef wlink_extralnk
extra_l_flags += $(wlink_extralnk)
!endif

#!ifdef nec
#lflags_dos_386 = sys dos4g
#!else
#lflags_dos_386 = sys causeway
#!endif
extra_l_flags_qnx = op res=wlink.u, st=24k, off=32k

!ifeq sys_dll 1
extra_l_flags_nt = op modname='wlink.dll' reference __DLLstart_
extra_l_flags_nt += op offset=0x69c00000
extra_l_flags_os2 = op modname='wlink'
lflags_os2_386 = sys os2v2 dll initinstance terminstance
lflags_nt_386 = sys nt_dll initinstance terminstance
lflags_nt_axp = sys ntaxp_dll initinstance terminstance
exe_lflags_nt_axp       = sys ntaxp
exe_lflags_nt_386       = sys nt
exe_lflags_os2_386      = sys os2v2
!endif

################
# rc flags stuff

extra_rc_flags_qnx = -D_UNIX
extra_rc_flags_linux = -D_UNIX
extra_rc_flags = $(extra_rc_flags_$(host_os))

# and finally, the miscellaneous macro definitions

!ifeq sys_dll 1
exe = wl.dll
!else
exe = wl.exe
!endif
stubexe = wlstub.exe

!ifeq bootstrap 1
exe = $(proj_name)
extra_c_flags =
inc_dirs = -I../linux386 -I. -I../h -I$(rc_dir)/h -I$(lib_misc_dir)/h &
-I$(watcom_dir)/h
libs = $(wres_lib) $(dwarf_dw_lib) $(orl_lib) &
$(clib_dir)/$(%OBJDIR)/libwatcom.a
!endif

lnk = tmp.lnk

$(exe) : wlink.res $(c_objs) $(extra_objs) $(libs) $(rc_objs)
!ifeq bootstrap 1
    $(cc) -o $^@ $(c_objs) $(extra_objs) $(libs)
!else
    @%create $(lnk)
    @%append $(lnk) $(lflags)
    @%append $(lnk) name $^@
    @%append $(lnk) file { $(c_objs) $(extra_objs) }
    @%append $(lnk) lib { $(libs) }
    $(linker) @$(lnk)
!ifeq sys_dll 1
!ifdef build_rc_$(host_os)_$(host_cpu)
    $(rc) -bt=$(build_rc_$(host_os)_$(host_cpu)) &
    -i="$(inc_dirs_sys_$(build_rc_$(host_os)_$(host_cpu)))" version.rc $^@
!endif
    %make $(stubexe)
!endif
!endif
    wstrip -q -a -r $@ . wlink.res

slnk = stub.lnk

$(stubexe) : $(stub_objs)
    rm -f wlink.lib
    $(librarian) -n wlink.lib $(exe)
    @%create $(slnk)
    @%append $(slnk) $(mode_lflags) $(exe_lflags_$(host_os)_$(host_cpu))
    @%append $(slnk) file { $(stub_objs) }
    @%append $(slnk) name $^@
    @%append $(slnk) lib wlink.lib op map=wlstub,noredefs
    $(linker) @$(slnk)

#################
# explicit rules

./genverrc.exe : $(fe_misc_dir)/c/genverrc.c
        $(bld_cl) $[@ $(wcl_util_opts) -D_VERSION=$(bld_ver)

version.rc : ./genverrc.exe ../h/wlver.rc $(fe_misc_dir)/c/genverrc.c
        $[@ ../h/wlver.rc version.rc $$ wlink.dll $(patch_level)

stubidedrv.obj : idedrv.c .AUTODEPEND
        @set include=$(inc_path)
        $(cc) $(cflags) $(extra_c_flags_$^&) $[@

drvmsgpr.obj : idemsgpr.c .AUTODEPEND
        @set include=$(inc_path)
        $(cc) $(cflags) $(extra_c_flags_$^&) $[@

wlink.res : rcmsg.gh ../h/wlink.msg ../h/lnkerror.rc ../h/wlnkmsg.h ../h/lnkerror.msg ../h/wlink.rc
        $(rc_aui) $(extra_rc_flags) -I"$(wrc_dir)/h" -I"$(watcom_dir)/h" $]@ -fo=$^@

rcmsg.gh : $(wrc_dir)/h/rc.msg
!ifdef __LINUX__
        perl $(sdk_dir)/misc/msgtoh.pl < $[@ | sed 's/0$$/800/' > rcmsg.gh
!else
        $(vi) -s $(sdk_dir)/misc/msgtoh.vi -p"rcmsg.gh" $[@
        $(vi) -s ../h/rcrebase.vi rcmsg.gh
!endif
