proj_name = wsample

!ifndef wsample_autodepends
wsample_autodepends = .AUTODEPEND
!endif

!ifndef target
target = $(host_os)
!endif

!ifeq target dos
memory_model_i86 = s
!else ifeq target rsi
memory_model_i86 = l
PEGGED = 1
!else ifeq target win
memory_model_i86 = c
!endif

xname_dos_i86   = wsample
xname_nov_386   = wsample
xname_nt_axp    = wsmpaxp
xname_nt_386    = wsmpnt
xname_os2_386   = wsmpos22
xname_os2_i86   = wsampos2
xname_pls_386   = wsamppls
xname_rsi_i86   = wsamprsi
xname_win_i86   = wsamplew

xname = $(xname_$(target)_$(host_cpu))

!include cproj.mif
!include deftarg.mif
!include defrule.mif

!include wres.mif

objs_nt_axp  = sampaxp.obj sysinit.obj sampexe.obj
objs_nt_386  = sampnt.obj sysinit.obj sampexe.obj
objs_os2_386 = sampos22.obj sysinit.obj sampexe.obj
objs_os2_i86 = sampos2.obj sysinit.obj sampexe.obj
objs_win_i86 = sampwin.obj sampexe.obj winmain.obj winopts.obj fault.obj notify.obj libload.obj globals.obj getidata.obj segmem2.obj segmem.obj mythelp.obj inth.obj intdata.obj dbg386.obj ismod32.obj
objs_dos_i86 = sampdos.obj sampexe.obj realmode.obj rmhooks.obj timasm.obj interc.obj settime.obj
objs_rsi_i86 = samprsi.obj sysinit.obj sampexe.obj sbrk.obj settime.obj dbglib.obj segs_16m.obj dbgliba.obj rmhdlr.obj magicstr.obj $(lang_root)/lib286/dos/dos16m.obj
objs_pls_386 = samppls.obj sysinit.obj sampexe.obj timer.obj settime.obj
objs_nov_386 = sampnlm.obj realmode.obj nwhooks.obj settime.obj cpuspeed.obj pitstuff.obj

objects = $(objs_$(target)_$(host_cpu)) sample.obj sampdata.obj io.obj sysio.obj wmsg.obj

extra_c_flags =  -s

extra_c_flags_dos_dos = -dREPORT_TYPE=__interrupt -dFAR_PTR=__far
extra_c_flags_dos_rsi = -dREPORT_TYPE= -dFAR_PTR=__far -zu -hc
extra_c_flags_dos_pls = -dREPORT_TYPE= -dFAR_PTR= -d_PLS
extra_c_flags_dos     = $(extra_c_flags_dos_$(target))
extra_c_flags_win     = -dREPORT_TYPE= -dFAR_PTR=__far -zu -zw -orlt
extra_c_flags_nov     = -dREPORT_TYPE= -dFAR_PTR= -dNETWARE -3s -zp1
extra_c_flags_nt      = -dREPORT_TYPE= -dFAR_PTR=
extra_c_flags_os2     = -dREPORT_TYPE= -dFAR_PTR=

extra_c_flags_i86     = -fpc -2
extra_c_flags_386     = -fpc
!ifeq target dos
extra_c_flags_i86     += -DSHORT_OFF
!else ifeq target os2
extra_c_flags_i86     += -DSHORT_OFF
!endif

extra_a_flags_dos_rsi = -Dlarge
extra_a_flags_dos     = $(extra_a_flags_dos_$(target))

extra_rc_flags_nt          = -dNT
extra_rc_flags_os2_386     = -dOS22
extra_rc_flags_os2_i86     = -dOS2
extra_rc_flags_os2         = $(extra_rc_flags_os2_$(host_cpu))
extra_rc_flags_dos_dos_i86 = -dDOS
extra_rc_flags_dos_rsi_i86 = -dRSI
extra_rc_flags_dos_pls_386 = -dPLS
extra_rc_flags_dos         = $(extra_rc_flags_dos_$(target)_$(host_cpu))
extra_rc_flags_nov         = -dNLM
extra_rc_flags_win         = -dWIN -30
extra_rc_flags             = $(extra_rc_flags_$(host_os))

nlm_imports = &
    FileServerMajorVersionNumber &
    AllocateResourceTag &
    ScheduleSleepAESProcessEvent &
    MapAbsoluteAddressToDataOffset &
    Abend  &
    Pause  &
    Disable  &
    Enable  &
    RegisterForEventNotification  &
    UnRegisterEventNotification  &
    systemConsoleScreen  &
    OutputToScreen  &
    LoadModule  &
    LoadedList &
    Alloc &
    delay &
    GetCurrentTime &
    ImportSymbol &
    Free

!ifdef __LINUX__
description = \'Open Watcom Sampler V2.2\'
!else
description = 'Open Watcom Sampler V2.2'
!endif

extra_l_flags = op symfile,map name $(xname)
extra_l_flags_os2_i86 = lib os2.lib op stack=4k, newfiles
extra_l_flags_os2 = $(extra_l_flags_os2_$(host_cpu))
extra_l_flags_win = option heap=10k, stack=10k segment class 'CODE' preload fixed segment class 'DATA' preload fixed lib commdlg,toolhelp

!ifeq target nov
inc_dirs=$(ow_nwoss_root)/common/h;$(ow_nwoss_root)/nw4/h;$(nwsrc);$(dig_dir)/h;
!else ifeq target win
inc_dirs = ../h;$(sdkdir)/misc;$(watcom_dir)/h;$(dig_dir)/h;
!else ifeq target rsi
inc_dirs = ../rsii86;$(rsilib);$(dig_dir)/h
!else ifeq target pls
inc_dirs = $(plsdir);$(dig_dir)/h
!else
inc_dirs = $(watcom_dir)/h;$(dig_dir)/h;
!endif

!ifeq target dos
.c: ../dosi86;../c
!else ifeq target win
.c: ../c;$(sdkdir)/misc
!else ifeq target rsi
.c: ../rsii86;../c;$(rsilib)
!else ifeq target pls
.c: ../pls386;../c;$(plslib)
!else
.c: ../c
!endif

!ifeq target win
.asm: ../asm;$(sdkdir)/misc
!else ifeq target rsi
.asm: ../rsii86;../asm;$(rsilib)
!else
.asm: ../asm
!endif

rsidir = $(tools_root)

!ifeq target rsi

libs = $(rsilib)/d16libc.lib &
    $(lang_root)/lib286/dos/clibl.lib &
    $(wres_lib)

$(xname).exe : $(xname).exp $(xname).res
    $(rsidir)\splice $^@ $(xname).exp -ALT ../../wstub/wstubq.exe
    wstrip -q -a -r $^@ . $(xname).res

$(xname).exp : $(objects) $(libs) $(__MAKEFILES__)
    @%create tmp.lnk
    @%append tmp.lnk exp($(xname)) map($(xname)) log($(xname).err)
!ifeq release 0
    @%append tmp.lnk -codeview
!endif
    @%append tmp.lnk -mpl -nod -DPMI -map -acg -farcall -auto -quiet -rtnerr 2
    @for %i in ($(objects)) do @%append tmp.lnk %i
    @for %i in ($(libs)) do @%append tmp.lnk %i
    -!$(rsidir)\glu @tmp.lnk

!else ifeq target nov

libs = ../../clib/library/nw_clib.386/ms_s/clib3s.lib &
    $(wres_lib)

$(xname).nlm : $(xname).res $(objects) $(libs) $(__MAKEFILES__)
    @%write $(%debug) tmp.lnk name $^@
    @%append tmp.lnk option osname='Novell NLM'
    @%append tmp.lnk format novell nlm $(description)
    @%append tmp.lnk debug novell
    @%append tmp.lnk debug all
    @%append tmp.lnk option map
    @%append tmp.lnk option stack=10k
    @%append tmp.lnk option nodefault
    @for %i in ($objects) do @%append tmp.lnk file %i
    @for %i in ($(nlm_imports)) do @%append tmp.lnk import %i
    @%append tmp.lnk import @$(ow_nwoss_root)/common/imp/owclib.imp
    @for %i in ($(libs)) do @%append tmp.lnk lib %i
    @%append tmp.lnk module clib
    $(linker) @tmp.lnk
    wstrip -q -a -r $^@ . $(xname).res

!else ifeq target pls

libs = $(plsdir)/wdos32.lib &
    $(plsdir)/wdosx32.lib &
    $(wres_lib) &
    $(lang_root)/lib386/dos/clib3r.lib &
    $(lang_root)/lib386/math3r.lib

$(xname).exp : $(objects) $(xname).res $(libs) $(__MAKEFILES__)
    @%write tmp.lnk format phar ext
    @%append tmp.lnk name $^@
    @%append tmp.lnk option map,nodefaultlibs
    @%append tmp.lnk option maxdata=0
    @%append tmp.lnk runtime maxreal=1023K
    @%append tmp.lnk runtime maxibuf=4K
    @%append tmp.lnk runtime flag=2
    @%append tmp.lnk file $(plsdir)/dilseg.obj
    @%append tmp.lnk file $(plsdir)/dilglue.obj
    @for %i in ($(objects)) do @%append tmp.lnk file %i
    @for %i in ($(libs)) do @%append tmp.lnk lib %i
    $(linker) @tmp.lnk
    wstrip -q -a -r $^@ . $(xname).res
!else

$(xname).exe : $(objects) $(xname).res $(wres_lib) $(__MAKEFILES__)
    @%write tmp.lnk $(lflags)
    @for %i in ($(objects)) do @%append tmp.lnk file %i
    @%append tmp.lnk lib $(wres_lib)
    $(linker) name $^@ @tmp.lnk
!ifeq host_os win
    $(rc) $(rc_flags) $(xname).res $^@
!else
    wstrip -q -a -r $^@ . $(xname).res
!endif

!endif

!ifeq host_os win
$(xname).res : ../h/wsamplew.rc ../h/wsampres.rc ../h/wsamplew.ico ../h/wsample.rc ../h/wmsg.h
!else
$(xname).res : ../h/wsample.rc ../h/wmsg.h
!endif
    @set include=$(inc_path)
    $(rc_aui) $(extra_rc_flags) $[@ -fo=$^@
