proj_name = f77

!ifndef f77_autodepends
f77_autodepends = .AUTODEPEND
!endif

!include cproj.mif
!include deftarg.mif
!include defrule.mif

!include $(cg_dir)/mif/fe.mif
!include $(dwarf_dir)/dw/client.mif
!include wres.mif

!ifeq release 0
f77_trmem = 1
!endif

inc_dirs=-I"../h" -I"../../h" $(cg_inc_dirs) -I"$(dwarf_dir)/dw/h" -I"$(comp_cfg_dir)/h" -I"$(fe_misc_dir)/h"

!ifeq target_cpu 386
inc_dirs+= -I"$(wasm_dir)/h"
pre_deps_wasm = inlnops.gh msg.gh
!else ifeq target_cpu i86
inc_dirs+= -I"$(wasm_dir)/h"
pre_deps_wasm = inlnops.gh msg.gh
!else ifeq target_cpu axp
inc_dirs+= -I"$(as_dir)/h"
!else ifeq target_cpu ppc
inc_dirs+= -I"$(as_dir)/h"
!endif

# define _USE_RESOURCES_ so that WASM error messages come from resources
extra_c_flags = -D_USE_RESOURCES_
extra_c_flags_i86 = -zp1
extra_c_flags_386 = -zp1

.h: ../h;../../h
.c: ../c;../../c;$(wasm_dir)/c;$(trmem_dir);

!ifeq host_cpu axp
asm_opts  = -oc -zq -we
.asm: ../../asmaxp
.asm.obj:
    $(as) $[* $(asm_opts)
!endif

!include ../files.mif

!ifeq f77_trmem 1
#extra_c_flags = -DTRMEM
fobjs += trmem.obj trmemcvr.obj
!endif

exename_i86 = wfc
exename_386 = wfc386
exename_axp = wfcaxp
exename_ppc = wfcppc
target_exe  = $(exename_$(target_cpu))

!ifdef mkstubs
f77_cg_libs = $(cg_stub_libs);
!else ifeq release 1
f77_cg_libs = $(cg_libs)
!else
f77_cg_libs = $(cg_debug_libs)
!endif

extra_c_flags_trmem = -DTRMEM -of+
extra_c_flags_trmemcvr = -DTRMEM -of+

extra_l_flags = op map

# Need lots of stack for NT because code gen turns off safe recurse.
extra_l_flags_nt = op stack=1024k commit stack=32k

flibs = $(wres_lib) $(dwarf_dw_lib) $(asminline_lib)

$(target_exe).exe : $(pre_deps_wasm) $(fobjs) errmsg.res $(cg_deps) $(flibs)
    %create $^&.lnk
    @for %i in ($(fobjs)) do @%append $^&.lnk file %i
    @for %i in ($(flibs)) do @%append $^&.lnk lib %i
    @%append $^&.lnk $(f77_cg_libs)
!ifeq host_os osi
    @%append $^&.lnk name $^&.rex
    $(linker) $(lflags) @$^&.lnk
    $(w32bind) $^&.rex $@ $(os2ldr)
    @rm -f $^&.rex
!else    
    @%append $^&.lnk name $@
    $(linker) $(lflags) @$^&.lnk
!endif
    wstrip -q -a -r $@ . errmsg.res

option.obj : option.c optinfo.h

errmsg.res : ../c/errmsg.rc ../h/errmsgi.rc ../h/errmsg3.rc ../h/errcod.h ../h/errcodi.h ../h/errcod3.h
    $(rc_aui) -I"../../h" -I"$(wasm_dir)/h" -I"$(comp_cfg_dir)/h" -I"$(fe_misc_dir)/h" $[@ -fo=$^@

./mkopcode.exe: $(wasm_dir)/mkopcode.c
    $(bld_cl) $[@ $(wcl_util_opts)

inlnops.gh: ./mkopcode.exe $(wasm_dir)/inlnops.tok
    $[@ $(wasm_dir)/inlnops.tok $^@

msg.gh : $(wasm_dir)/h/asmshare.msg
    $(vi) -s $(wasm_dir)/h/makemsg.vi -p "$^@ MSG_RC_BASE" $[@
