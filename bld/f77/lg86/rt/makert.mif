#
#   MAKERT.MIF: makefile for generating WATFOR77 Run Time library
#

#   Modified    By              Reason
#   --------    --              ------
#   92/03/12    D.J.Gaudet      Initial implementation
#   93/04/23    Alex Brodsky    SA library for both 8086 and 80386 now

in_sa_library=1
!include $(f77_dir)/lg86/comp.mif

#
# get the obj file macros
#
!include $(f77_dir)/lg86/rt/rt.mif
!include $(f77_dir)/lg86/rt/sa.mif


#
# define the main target now so that we may define some other targets
#
libname = $(lib).lib

all: $(libname) ..\errmsg.res .symbolic
    @%null

#
# get the fcodes information
#
!ifeq form dos
fcnovect_lnk = $(f77_dir)\lg86\fcnovect.lnk
!endif
!include $(f77_dir)/lg86/fcodes.mif


#
# get the intrinsic function files
#
!include $(f77_dir)/lg86/ifbuild.mif
!ifdef __386__
if_lib = ..\ifns\if386.lib
!else
if_lib = ..\ifns\if.lib
!endif
$(if_lib) : $(ifbuild)
!ifdef __386__
        $(run_ifbuild) f3 ..\ifns
        $(run_ifbuild) m ..\ifns\ifns.mif
        wmake -h -f $(f77_dir)\lg86\rt\mkiflib.mif fp_model=$(fp_model) form=$(form) __386__=
        del ..\ifns\*.asm
        del ..\ifns\ifns.mif
!else
        $(run_ifbuild) f2 ..\ifns
        $(run_ifbuild) m ..\ifns\ifns.mif
        wmake -h -f $(f77_dir)\lg86\rt\mkiflib.mif fp_model=$(fp_model) form=$(form)
#       del ..\ifns\*.asm
#       del ..\ifns\ifns.mif
!endif

#
# build the library
#
$(libname) :    $(fcode_headers) $(if_lib) &
                $(obj_rt_0) $(obj_rt_1) $(obj_rt_2) $(lib).lbc
    wlib $(wlib_opts) $(libname) @$(lib).lbc +$(if_lib)

#
# create resource file for error messages
#
..\errmsg.res : ..\c\errmsg.rc ..\h\errcod.h
    wrc /r /fo=$^@ /dMSG_LANG_BASE=0 /dMSG_LANG_SPACING=0 ..\c\errmsg.rc

#
# build the .lbc file
#
fcmds=@%append $^@ +%i

$(lib).lbc : $(f77_dir)\lg86\rt\rt.mif $(f77_dir)\lg86\rt\sa.mif
    @echo Creating $^@
    @%create $^@
    @for %i in ($(obj_rt_0)) do $(fcmds)
    @for %i in ($(obj_rt_1)) do $(fcmds)
    @for %i in ($(obj_rt_2)) do $(fcmds)
