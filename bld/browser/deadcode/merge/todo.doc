Things To Do : lots!
--------------------

- makefile needs to be beefed up

- Options for command line.  There aren't any now. eg. specify output file
  name for starters

- Symbol stream should be flushed and all the memory should be recovered when
  all symbols have been processed and there are still some symbols left in
  memory.

- Take care of references to children of deleted symbols.

- Take care of unnamed symbols
  Maybe encode unnamed symbols into a string using their tags and types?

- Handling of statement program is pretty rudimentary.  For one thing, since
  we don't generate much in the statement program, there hasn't been much
  testing of it.

- The .debug_ref section processing is also pretty simplistic.  There's still
  the possibility of duplicate blocks being emitted here.  For example, if
  a file is included in the source code of two different modules and then
  merged using this program, the .debug_ref processing just copies the
  section out, updating references to their new offsets.  This results in
  two copies of the .debug_ref block which is for the included file.

- The way each section (.debug_abbrev, .debug_line, etc.) is processed
  in DwarfFileMerger is rather inconsistent because of the problems I had
  deciding what kind of objects I wanted.  It's probably best just to follow
  the way things were done for the .debug_info section -- ie. in
  the DwarfFileMerger class, get a ptr to the memory for the relevant
  section from the mbr file class and then do all the processing in there.

- Improving the various data structures used (everywhere).  eg. abbreviation
  table would probably be better as a hash table.

- Could run out of file handles in MFile

- Freeing memory for the .debug_line section (and possibly others) in
  MBRFile::getSectionRawData() after were through using it instead of
  freeing at all at the very end

- the compilation unit DIE is simply the compilation unit DIE from the
  first MBR file processed; you may wish to change this so that the
  name is changed

- drmisc.c is compiled using cpp; just compile it with wcc

- Compilation gives many warnings.  Clean up as much of it as possible

- Need to clean up memory in error conditions.

- Memory tracker still gives errors resulting from filetabl.cpp's allocation
  of integers

- Better errors and exceptions.  Only a few different exceptions are
  thrown.

Dubious Dwarf Stuff
-------------------

- compiler emits a DIE for defined static functions with
  DW_AT_declaration = TRUE

- is DW_LNE_end_sequence encoded properly by the dwarf writing library?

- nameless enums given ".0", ".1", etc. as names

