#
# WATCOM Presentation Graphics (PGCHART.LIB)
#

objs = &
        PGANCOM.obj &
        PGANMS.obj &
        PGANPIE.obj &
        PGANSCMS.obj &
        PGAXIS.obj &
        PGCHART.obj &
        PGCHRDEF.obj &
        PGCHRTPI.obj &
        PGDFAULT.obj &
        PGHLABEL.obj &
        PGINIT.obj &
        PGLEGEND.obj &
        PGMISC.obj &
        PGPAL.obj &
        PGSCALE.obj &
        PGSCTTER.obj &
        PGSTYLE.obj &
        PGTITLE.obj &
        PGVARS.obj &
        PGVLABEL.obj

!ifeq _386 386
text_seg_name = _TEXT
.before
        @set inc386=../h;$(build_root)/graphlib/h;$(build_root)/watcom/h;$(build_root)/hdr/dos;$(%include)
        @set wcc386=-osax -w3 -zq -zl -fpc -d1 $(model)
!else
text_seg_name = GRAPH_TEXT
.before
        @set include=../h;$(build_root)/graphlib/h;$(build_root)/watcom/h;$(build_root)/hdr/dos;$(%include)
        @set wcc=-osax -w3 -zq -zl -fpc -d1 $(model)
!endif

cflags = -nt=$(text_seg_name) -d_CGRAPH=$(cdecl) -d_FARD=$(fard) -nm=$(module) -fo=$[&.obj

.c: $(build_root)/pgchart/c

$(libname).lib : $(objs) ../pgchart.lbc
        wlib -b -n -q $(libname).lib @../pgchart.lbc

.c.obj:
!ifeq _386 386
        $(libcomp386) -zq $(cflags) $(extra_c_flags) $[*
!else
        $(libcomp286) -zq $(cflags) $(extra_c_flags) $[*
!endif

../pgchart.lbc : ../pgchart.mif
        %create $^@
        for %i in ($(objs)) do %append $^@ -+%i

clean: .symbolic
        rm -f *.obj *.lib ../*.lbc *.tmp
