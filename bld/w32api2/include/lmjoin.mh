/*
 *  lmjoin.h    LAN Manager join functions
 *
:include crwatcnt.sp
 */

#ifndef _LMJOIN_H_INCLUDED
#define _LMJOIN_H_INCLUDED

:include readonly.sp
:include cpluspro.sp

/* Network setup join flags */
#define NETSETUP_JOIN_DOMAIN                0x00000001L
#define NETSETUP_ACCT_CREATE                0x00000002L
#define NETSETUP_ACCT_DELETE                0x00000004L
#define NETSETUP_WIN9X_UPGRADE              0x00000010L
#define NETSETUP_DOMAIN_JOIN_IF_JOINED      0x00000020L
#define NETSETUP_JOIN_UNSECURE              0x00000040L
#define NETSETUP_MACHINE_PWD_PASSED         0x00000080L
#define NETSETUP_DEFER_SPN_SET              0x00000100L
#define NETSETUP_JOIN_DC_ACCOUNT            0x00000200L
#define NETSETUP_JOIN_WITH_NEW_NAME         0x00000400L
#define NETSETUP_INSTALL_INVOCATION         0x00040000L
#define NETSETUP_IGNORE_UNSUPPORTED_FLAGS   0x10000000L
#define NETSETUP_VALID_UNJOIN_FLAGS \
    (NETSETUP_ACCT_DELETE | NETSETUP_INGORE_UNSUPPORTED_FLAGS)

/* NetAddAlternateComputerName() flags */
#define NET_IGNORE_UNSUPPORTED_FLAGS    0x00000001L

/* Network setup name types */
typedef enum _NETSETUP_NAME_TYPE {
    NetSetupUnknown             = 0,
    NetSetupMachine             = 1,
    NetSetupWorkgroup           = 2,
    NetSetupDomain              = 3,
#if (_WIN32_WINNT >= 0x0500)
    NetSetupNonExistentDomain   = 4,
    NetSetupDnsMachine          = 5
#else
    NetSetupNonExistentDomain   = 4
#endif
} NETSETUP_NAME_TYPE;
typedef NETSETUP_NAME_TYPE  *PNETSETUP_NAME_TYPE;

/* Network setup join status values */
typedef enum _NETSETUP_JOIN_STATUS {
    NetSetupUnknownStatus   = 0,
    NetSetupUnjoined        = 1,
    NetSetupWorkgroupName   = 2,
    NetSetupDomainName      = 3
} NETSETUP_JOIN_STATUS;
typedef NETSETUP_JOIN_STATUS    *PNETSETUP_JOIN_STATUS;

/* Network computer name types */
typedef enum _NET_COMPUTER_NAME_TYPE {
    NetPrimaryComputerName      = 0,
    NetAlternateComputerNames   = 1,
    NetAllComputerNames         = 2,
    NetComputerNameTypeMax      = 3
} NET_COMPUTER_NAME_TYPE;
typedef NET_COMPUTER_NAME_TYPE  *PNET_COMPUTER_NAME_TYPE;

/* Functions in NETAPI32.DLL */
NET_API_STATUS NET_API_FUNCTION NetAddAlternateComputerName( LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, ULONG );
NET_API_STATUS NET_API_FUNCTION NetEnumerateComputerNames( LPCWSTR, NET_COMPUTER_NAME_TYPE, ULONG, PDWORD, LPWSTR ** );
NET_API_STATUS NET_API_FUNCTION NetGetJoinInformation( LPCWSTR, LPWSTR *, PNETSETUP_JOIN_STATUS );
NET_API_STATUS NET_API_FUNCTION NetGetJoinableOUs( LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, DWORD *, LPWSTR ** );
NET_API_STATUS NET_API_FUNCTION NetJoinDomain( LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, DWORD );
NET_API_STATUS NET_API_FUNCTION NetRemoveAlternateComputerName( LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, ULONG );
NET_API_STATUS NET_API_FUNCTION NetRenameMachineInDomain( LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, DWORD );
NET_API_STATUS NET_API_FUNCTION NetSetPrimaryComputerName( LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, ULONG );
NET_API_STATUS NET_API_FUNCTION NetUnjoinDomain( LPCWSTR, LPCWSTR, LPCWSTR, DWORD );
NET_API_STATUS NET_API_FUNCTION NetValidateName( LPCWSTR, LPCWSTR, LPCWSTR, LPCWSTR, NETSETUP_NAME_TYPE );

:include cplusepi.sp

#endif /* _LMJOIN_H_INCLUDED */

