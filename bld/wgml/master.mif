#
# Watcom GML/Script (wgml) Makefile
# =======================================
#
# wgml depends on
#                 bld\watcom\c\swchar  DOS switch Char
#                 bld\trmem            memory tracker
#

proj_name = wgml

!ifndef wgml_autodepends
wgml_autodepends = .AUTODEPEND
!endif

# don't undefine for now (I can't get reading msg from resource to work)
incl_msgtext     = 1

debug_build      = 1
verbose          = 1

# get rid of the -zc
suppress_zc = 1

# extra_c_flags      += -fti
# extra_c_flags      += -pcl

!include cproj.mif
!include deftarg.mif
!include defrule.mif
!include trmem.mif
!include wres.mif

!include ../wgmlobjs.mif

inc_dirs = -I"../h" -I"$(wres_dir)/h" -I"$(wrc_dir)/h"

!ifeq incl_msgtext 1
extra_c_flags   += -dINCL_MSGTEXT
!endif

.c: ../c;../../watcom/c;$(trmem_dir);$(wrc_dir)/c;$(wres_dir)/c

!ifeq wgml_trmem 1
extra_c_flags   += -of+ -dTRMEM
objs            += $(trmem_objs)
inc_dirs        += -I"$(trmem_dir)"
!endif


libs     += $(wres_lib)
gen_deps = $(objs) $(libs) $(__MAKEFILES__) wgml.lnk


#
# don't build wgml.exe for linux
#

!ifneq host_os linux

all : wgml.exe .SYMBOLIC

wgml.exe: $(msg_deps) $(gen_deps)
    $(linker) name $^@ @wgml.lnk
!ifneq incl_msgtext 1
    wstrip -q -a -r $@ . wgml.res
!endif
    -rm wgml.lnk

!else

all : .SYMBOLIC

!endif

wgml.lnk : $(__MAKEFILES__)
    %create wgml.lnk
    @%append wgml.lnk $(lflags)
    @%append wgml.lnk option map
!ifeq verbose 1
    @%append wgml.lnk option verbose
!endif
    @for %i in ( $(objs) ) do @%append wgml.lnk file %i
    @for %i in ( $(libs) ) do @%append wgml.lnk lib %i

