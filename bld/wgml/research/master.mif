#
# Watcom GML/Script (wgml) Makefile
# =======================================
#

wgml_autodepends = .AUTODEPEND

!include cproj.mif
!include deftarg.mif
!include defrule.mif
!include wres.mif

inc_dirs = -I"../h;../../h"

.c: ../c;../../c;$(watcom_dir)/c

common_objs = &
            common.obj    &
	    dfinterp.obj  &
	    heapchk.obj   &
            research.obj  &
            cmdlhelp.obj  &
            swchar.obj

cf_common_objs = &
	    $(common_objs) &
	    cfdir.obj     &
	    cfdev.obj     &
	    cfdrv.obj     &
	    cffon.obj     &
	    cffunc.obj    &
            cfheader.obj  &
            lhdirect.obj

cfc_objs = &
            cfcheck.obj   &
            cfcutils.obj

cfp_objs = &
            $(cf_common_objs) &
            cfparse.obj       &
            cfputils.obj

cop_common_objs = &
	    $(common_objs) &
            copdev.obj    &
	    copdir.obj    &
	    copdrv.obj    &
            copfiles.obj  &
	    copfon.obj    &
	    copfunc.obj   &
	    cophdr.obj    &
	    devfuncs.obj  &
	    findfile.obj  &
	    outbuff.obj
	    
copp_objs = &
            $(cop_common_objs) &
            copparse.obj

devld_objs = &
            $(cop_common_objs) &
	    devldchk.obj
	    
ff_objs = &
            common.obj    &
	    findfunc.obj  &
            research.obj  &
            cmdlhelp.obj  &
            swchar.obj

outc_objs = &
            $(cop_common_objs) &
	    outcheck.obj

nwgml : wgmlmsge.gh wgmlmsgs.gh cfcheck.exe cfparse.exe copparse.exe &
	devldchk.exe findfunc.exe outcheck.exe .SYMBOLIC

cfcheck.exe : $(cfc_objs) $(cf_common_objs) $(libs)
!ifeq verbose 1
        $(cl) $(clflags) $< $(cl_libs)
!else
        @echo cl $@
        @$(cl) $(clflags) $< $(cl_libs)
!endif

cfparse.exe : $(cfp_objs) $(libs)
!ifeq verbose 1
        $(cl) $(clflags) $< $(cl_libs)
!else
        @echo cl $@
        @$(cl) $(clflags) $< $(cl_libs)
!endif

copparse.exe : $(copp_objs) $(libs)
!ifeq verbose 1
        $(cl) $(clflags) $< $(cl_libs)
!else
        @echo cl $@
        @$(cl) $(clflags) $< $(cl_libs)
!endif

devldchk.exe : $(devld_objs) $(libs)
!ifeq verbose 1
        $(cl) $(clflags) $< $(cl_libs)
!else
        @echo cl $@
        @$(cl) $(clflags) $< $(cl_libs)
!endif

findfunc.exe : $(ff_objs) $(libs)
!ifeq verbose 1
        $(cl) $(clflags) $< $(cl_libs)
!else
        @echo cl $@
        @$(cl) $(clflags) $< $(cl_libs)
!endif

outcheck.exe : wgml.res $(outc_objs) $(libs)
    %create wgml.lnk
    @%append wgml.lnk $(lflags)
    @%append wgml.lnk option map
!ifeq verbose 1
    @%append wgml.lnk option verbose
!endif
    @for %i in ( $(outc_objs) ) do @%append wgml.lnk file %i
    @for %i in ( $(libs) ) do @%append wgml.lnk lib %i
    $(linker) name $^@ @wgml.lnk
    wstrip -q -a -r $@ . wgml.res
    -rm wgml.lnk

wgmlmsgs.gh : ../../h/wgmlerr.msg ../../h/wgml.msg
        $(awk) -v base=000 -f ../../makemdef.awk $< > $^@

wgmlmsge.gh : ../../h/wgmlerr.msg ../../h/wgml.msg
        $(awk) -v rcbase=000 -f ../../msgtoenm.awk $< > $^@

wgml.res : wgmlmsgs.gh ../../h/wgml.msg ../../h/wgmlmsg.h &
                       ../../h/wgmlerr.msg ../../h/wgml.rc
        $(rc_aui) $(extra_rc_flags) -I"$(wrc_dir)/h" $]@ -fo=$@


