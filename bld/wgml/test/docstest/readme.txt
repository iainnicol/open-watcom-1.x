INTRODUCTION

This file contains notes on the facility created for testing our wgml and 
ultimately for validating it by showing that it produces byte-wise identical 
output to that produced by wgml 4.0 when applied to the Open Watcom documents 
using devices WHELP and PS.

MIF FILES MODIFIED

The mif files have been modified in several ways:
1. The paths to the mif, doc and bld directories have been changed from relative paths 
to fixed paths, using OWROOT.
2. The WHELP document build process is broken down into four stages: 
initial wgml pass (pass 1a), initial whpcvt pass (pass 1b), final wgml pass (pass 2a), 
and final whpcvt pass (pass 2b).
3. The mif file (onebook.mif) has been modified to allow each pass to be tested and
to avoid the help compilers being applied unless all four passes are done.
4. The mif file (onebook.mif) has been modified to select the correct version of our 
wgml (dos386, linux386, nt386, os2386) when appropriate, and to continue to select 
the correct version of wgml 4.0 when needed.
5. A debugging directory is provided so that wdw can be applied to our wgml using the
same context as is used with the tests.

MIFTEST

Because the mif files have been modified, miftest was created to produce the Open 
Watcom documents using the modified mif files. Since actually checking for diffs 
is not yet implemented, CSDiff was used manually.

CSDiff allows entire directories to be compared, returning one of the results 
"Deleted", "Modified", "New" or "Same". If the result is "Modified", then a 
file-specific diff list can be displayed.

This has its advantages, but, even if otherwise suitable to our purpose, would 
require CSDiff to used by everyone running the tests. A better choice for 
automation can, hopefully, be found.

The testing done was quite extensive: not only were each of dos, htmlhelp, nt, os2, 
and win compared against itself, cross-comparisons were also done. Some observations 
may be helpful:
1. If the PTF files are the same for the same target, then all the files generated 
by wgml/whpcvt for that document/target are the same.
2. Files created by the help program may be marked as "Modified" or (if the help file
has been used) as "New".
3. In any case, the makefile will be flagged as "Modified".
4. Spot-checks of the differences suggest that the body of the document is the same 
in all cases: all diffs seen were at the start, where the three files generated by 
wgml (passes 1a/2a) and (presumably) modified by whpcvt (pass 1b) are then 
re-inserted on the second wgml pass (2a).
5. In the cross-target checks, only htmlhelp and os2 had no ptf file diffs. The 
htmlhelp directory, of course, had a lot of html files not found in the os2 directory.

While it is strange that the files produced by the help compiler would differ when 
those produced by wgml/whpcvt are identical, there are some items that might differ:
date and time of creation, paths to the files created, perhaps others. If the files
created by wgml/whlpcvt are identical, then (for miftest and validate) the test is 
passed.

ALTERNATIVE TO MIFTEST

miftest could, in theory, be avoided by replacing the mif files in %OWROOT/docs/mif
with these versions and configuring them to do all four wgml/whcpt passes (1a, 1b, 2a,
2b) and then produce the help files when used with the production target directories
in addition to the various tests. 

The absolute paths to docs and bld would stay the same. The absolute path to the mif 
files would have to change to the docs\mif directory.

ADDITIONAL TESTS

These are intended to be used to explore the process of building the OW docs with 
wgml/whpcvt and device WHELP:

whpass1a -- generate (with wgml 4.0) the result of the first pass of wgml
whpass1b -- generate (with whpcvt) the result of the first pass of whpcvt
whpass2a -- generate (with wgml 4.0) the result of the second pass of wgml

These are intended (eventually) to validate our wgml:
pstest   -- generate both wgml 4.0 and our wgml versions with a fixed date and time
            so that, when our wgml is ready, there will be exactly zero (0) diffs
validate -- initially, generate the whelp docs with our wgml; when our wgml goes into
            use, generate them with wgml 4.0.

For now, they are best used on a single document and, for WHELP, only do pass 1a. Note 
that three files will need to be checked for device WHELP: the PTF file, the MIX file, 
and the CN1 file.

When our wgml goes into use, miftest will need to be altered to use our wgml (it 
currently uses wgml 4.0).

Each test (including miftest) has a makefile that allows building all docs, building 
one specified doc ("hbook="), and clean in each of its subdirectories.

There is also a debug directory; this is used to allow wdw to be applied to our wgml
using the same context as the build system. This has some special restrictions:
-- the makefile in "debug" itself only allows "clean";
-- the makefiles in the subdirectories only allow "clean" and a specific document 
(that is, "hbook=" must be present and use a valid document name

While #pmake lines exist in the makefiles, no lang.ctl entries exist to allow builder 
to be used. This is intentional: these tests should never be part of the actual build 
-- except perhaps validate once our wgml is finished, and then only in the build 
server, and only if automated diff detection has been provided.

TARGET-BASED VARIATIONS

Spot-checking ptf files which differed between targets showed all diffs (usually 1, 
occasionally 2) occurring in the prefix material rather than the document itself. 
This raises the possibility that the actual text of each document could be produced 
exactly once and then simply copied and re-used. Some modification of both the 
document specifications and whlpcvt.exe might be needed to effect this.

To explore this further, the symbol "dotarget" defined in the makefiles was 
investigated further. It becomes the symbol "dotarget" in the OW document 
specifications. However, there it is only used with "dos" and "os2".

cmix.gml and fmix.gml use "os2" and "dos" to exclude index entries for (presumably) 
those documents not provided in those formats. This is the only context in which "dos"
is used.

The remaining uses of "os2" are less clear. Many occur in macros, which may or may
not actually be used by the document specifications. However, as noted above, the ptf
files for "htmlhelp" and "os2", for those documents produced for both targets, were 
identical, which would suggest that the os2 document bodies, as such, do not differ 
from those of other targets.

OTHER DOCS

Several other documents are listed in books.mif but not built. This may include 
documents intended for OW developers as well as different versions of OW docs that
are built.

At some point, building and testing any developer documents should be considered, to 
ensure that our wgml can handle them, at least for PS/PDF; building and testing them
for WHELP may be irrelevant -- that is, they may only be intended to become PDF files.

