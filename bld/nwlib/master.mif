# be very careful with the ordering of the cproj.mif and defrule.mif
proj_name       = wlib

!ifndef wlib_autodepends
wlib_autodepends = .AUTODEPEND
!endif

!ifdef bootstrap
no_libs    = 1
!else ifdef prebuild
no_libs    = 1
!else ifeq release 0
wlib_trmem = 1
!endif

suppress_bd = 1

wlib_nosymfile = 1

!ifdef no_libs
!ifdef wlib_dll
!undef wlib_dll
!endif
!ifdef wlib_rtdll
!undef wlib_rtdll
!endif
!endif

!include cproj.mif
!include defrule.mif
!include deftarg.mif

!include trmem.mif

!ifdef no_libs
!include $(orl_dir)/orlobjs.mif
!else
!include wres.mif
!include $(orl_dir)/client.mif
!endif

##########
# objects

common_objs = &
    wlib.obj &
    libio.obj &
    symtable.obj &
    omfproc.obj &
    writelib.obj &
    convert.obj &
    wlibutil.obj &
    libwalk.obj &
    symlist.obj &
    proclib.obj &
    cmdline.obj &
    error.obj &
    implib.obj &
    elfobjs.obj &
    orlrtns.obj &
    memfuncs.obj &
    demangle.obj &
    omfutil.obj &
    coffwrt.obj &
    inlib.obj &
    idemsgpr.obj &
    ideentry.obj &
    $(trmem_objs)

!ifdef no_libs
common_objs += $(orl_objs)
!endif

drv_objs = maindrv.obj idedrv.obj idemsgfm.obj

exe_objs = maindrv.obj idedrv.obj idemsgfm.obj

dll_objs_nt = ntdll.obj
dll_objs_os2 = os2dll.obj

dll_objs = $(dll_objs_$(host_os))

comp_objs_exe = $(common_objs) $(exe_objs)
comp_objs_dll = $(common_objs) $(dll_objs)

external_dependencies = $(xlibs)
!ifeq host_os osi
external_dependencies += $(os2ldr)
!endif

!ifdef no_libs
depends_exe = $(comp_objs_exe) $(external_dependencies)
depends_dll = $(comp_objs_dll) $(external_dependencies)
!else
depends_exe = msg.gh wlib.res $(comp_objs_exe) $(external_dependencies)
depends_dll = msg.gh $(comp_objs_dll) $(external_dependencies)
!endif
depends_drv = $(drv_objs)

#########
# cflags

!ifdef no_libs
extra_c_flags += -DINCL_MSGTEXT
!endif

!ifeq release 0
extra_c_flags += -D__DEBUG__
!endif

!ifndef wlib_dll
extra_c_flags += -DIDE_PGM
!endif

extra_c_flags_ntdll    = -bd
extra_c_flags_os2dll   = -bd
extra_c_flags_trmem    = $(trmem_cflags)
extra_c_flags_memfuncs = $(trmem_cover_cflags)
extra_c_flags_idedrv   = -DSTATIC_LINKAGE

###################
# linker flags .EXE

extra_l_flags = op map, symfile

extra_l_flags_qnx = op offset=64k, stack=60k

###################
# linker flags .DLL

extra_l_flags_dll = op map, symfile

extra_l_flags_dll_nt = initinstance terminstance op offset=0x6A000000
extra_l_flags_dll_os2 = INITINSTANCE TERMINSTANCE

###################
# rc flags

extra_rc_flags_qnx = -D__UNIX__
extra_rc_flags_linux = -D__UNIX__
extra_rc_flags = $(extra_rc_flags_$(host_os))

# systems where version resources must be added to .DLL
version_res_nt_386 = version.res

inc_dirs =  -I.. -I"../h" -I"$(orl_dir)/h" -I"$(lib_misc_dir)/h"
.c: ../c;$(lib_misc_dir)/c;$(watcom_dir)/c;$(trmem_dir)
.h: ../h;$(watcom_dir)/h

!ifdef no_libs
inc_dirs += -I"$(orl_dir)/elf/h" -I"$(orl_dir)/coff/h" -I"$(orl_dir)/omf/h"
.c: $(orl_dir)/c;$(orl_dir)/elf/c;$(orl_dir)/coff/c;$(orl_dir)/omf/c;
.h: $(orl_dir)/h;$(orl_dir)/elf/h;$(orl_dir)/coff/h;$(orl_dir)/omf/h;
!endif


!ifdef bootstrap
defines = -DIDE_PGM -D__stdcall=
comp_objs_exe += clibext.obj
!endif

!ifdef no_libs
xlibs =
!else
xlibs += $(wres_lib) $(orl_lib)
!endif

!ifdef wlib_dll

wlib.exe: $(depends_drv) wlibd.lib drv.lnk
    $(linker) name $@ @drv.lnk

!else

wlib.exe: $(depends_exe) exe.lnk
!ifdef bootstrap
    $(cc) -g -o $@ $(comp_objs_exe) $(xlibs)
!else ifeq host_os osi
    $(linker) name $^&.rex @exe.lnk
    $(w32bind) $^&.rex $@ $(os2ldr)
    @rm -f $^&.rex
!else
    $(linker) name $@ @exe.lnk
!endif
!ifndef no_libs
    wstrip -q -a -r $@ . wlib.res
!endif

!endif

wlibd.dll: msg.gh $(depends_dll) $(version_res_$(host_os)_$(host_cpu)) wlib.res dll.lnk
    $(linker) name $@ @dll.lnk
!ifdef version_res_$(host_os)_$(host_cpu)
    $(rc) -k $(version_res_$(host_os)_$(host_cpu)) $^@
!endif
    wstrip -q -a -r $@ . wlib.res

wlibd.lib: wlibd.dll
    $(librarian) $(libflags) +$[@

drv.lnk : $(__MAKEFILES__)
    @%write $@ $(lflags)
    @for %i in ($(drv_objs)) do @%append $@ file %i
    @%append $@ lib wlibd.lib

exe.lnk : $(__MAKEFILES__)
    @%write $@ $(lflags)
!ifdef wlib_rtdll
    @for %i in ($(rtdll_libpath)) do @%append $@ libpath %i
!endif
    @for %i in ($(comp_objs_exe)) do @%append $@ file %i
    @for %i in ($(xlibs)) do @%append $@ lib %i

dll.lnk : $(__MAKEFILES__)
    @%write $@ $(lflags_dll)
!ifdef wlib_rtdll
    @for %i in ($(rtdll_libpath)) do @%append $@ libpath %i
!endif
    @for %i in ($(comp_objs_dll)) do @%append $@ file %i
    @for %i in ($(xlibs)) do @%append $@ lib %i

./mkstr.exe : ../mkstr.c ../wlib.msg
    $(bld_cl) $(wcl_util_opts) -I.. $[@

msg.gh : ./mkstr.exe
    *$< $@

wlib.res : ../wlib.rc ../wlib.msg msg.gh
    $(rc_aui) $(extra_rc_flags) $[@ -fo=$@

./genverrc.exe : $(fe_misc_dir)/c/genverrc.c
    $(bld_cl) $[@ $(wcl_util_opts) -D_VERSION=$(bld_ver)

!ifndef patch_level
patch_level=0
!endif

version.res : ./genverrc.exe ../h/version.rc $(fe_misc_dir)/c/genverrc.c
    $[@ ../h/version.rc version.rc $$ wlibd $(patch_level)
    $(rc) $(rc_flags) $(inc_path) version.rc -fo=$^@
