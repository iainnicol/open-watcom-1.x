#global definition which tool is quiet
cl         += -zq
cc         += -zq
cpp        += -zq
linker     += op q
librarian  += -q
as         += -q
rc         += -q

bld_cl     += -zq
bld_cc     += -zq
bld_link   += op q
bas        += -q

!ifdef %open_nlang_root
lang_root = $(%open_nlang_root)
!else
lang_root = $(%DWATCOM)
!endif

!ifndef __NTAXP__

use_bld_incs    = 0
!ifeq host_cpu axp
use_bld_incs    = 1
!endif
!ifeq $(proj_name)_rtdll 1
use_bld_incs    = 1
!endif
!ifdef clib_rtdll
# C runtime library must compile against local headers!!!!
use_bld_incs    = 0
!endif

!ifeq use_bld_incs 1
cc_386          += $(bld_incs)
cpp_386         += $(bld_incs)
!endif

!endif

!ifdef __LOADDLL__
!loaddll wcc    $(nlang_dll)\wccd.dll
!loaddll wcc386 $(nlang_dll)\wccd386.dll
!loaddll wccaxp $(nlang_dll)\wccdaxp.dll
!loaddll wlib   $(nlang_dll)\wlibd.dll
!loaddll wlink  $(nlang_dll)\wlink.dll
!loaddll wpp    $(nlang_dll)\wppdi86.dll
!loaddll wpp386 $(nlang_dll)\wppd386.dll
!loaddll wppaxp $(nlang_dll)\wppdaxp.dll
!endif

!ifeq proj_name cc
extra_l_flags_nt = lib $(watcom_dir)/lib/ld.lib
!endif
!ifeq host_cpu axp
def_targ        = wcc$(target_cpu)c.exe
!endif

# options for single source utility compilations
wcl_util_opts = -ox -w4 -fo=.obj -fe=$^@

#common bootstrap definitions for Linux
!ifdef __LINUX__
!ifdef bootstrap

cc = gcc
cl = $(cc)
bld_cl = $(cc)
bld_cc = $(cc)
bld_link = $(cc)
librarian += -fa

cppflags_386 = -D_M_IX86 -D__386__
cppflags_ppc = -D__PPC__

# $(inc_dirs_lang_$(host_os)) must be defined to override default OW headers
inc_dirs_lang_linux =

cppflags = $(defines) -DNDEBUG -D__UNIX__ -D__LINUX__ &
-D__SMALL__ -DUNIX -DLINUX -D__FLAT__ $(cppflags_$(host_cpu)) &
-D_WCUNALIGNED="__attribute__((packed))"
cflags = $(extra_c_flags) $(cppflags) -g -c -Wall -funsigned-char -pipe -O -o $@

# options for single source utility compilations
wcl_util_opts = -funsigned-char -Wall $(cppflags) $(inc_dirs) $(ldflags) -o $[&.exe &
$(defines) $(libs)

# options for linking via cc
clflags = -o $@
cl_libs = $(clib_dir)/$(%OBJDIR)/libwatcom.a

!endif
!endif

as = $(bas)
vi = $(bvi)
