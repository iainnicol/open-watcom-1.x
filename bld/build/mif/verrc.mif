# Build the genverrc tool and generate version.res

./genverrc.exe : $(fe_misc_dir)/c/genverrc.c
!ifeq verbose 1
        $(bld_cl) $(wcl_util_opts) -D_VERSION=$(bld_ver) $<
!else
        @echo cl -D_VERSION=$(bld_ver) $@
        @$(bld_cl) $(wcl_util_opts) -D_VERSION=$(bld_ver) $<
!endif

# Default names and values

!ifndef verrc_dll_skel
verrc_dll_skel = ../version.rc
!endif

!ifndef verrc_dll_int
verrc_dll_int = version.grc
!endif

!ifndef verrc_dll_out
verrc_dll_out = version.res
!endif

!ifndef verrc_dll
verrc_dll = $(proj_name)
!endif

!ifndef verrc_exe_skel
verrc_exe_skel = ../exever.rc
!endif

!ifndef verrc_exe_int
verrc_exe_int = exever.grc
!endif

!ifndef verrc_exe_out
verrc_exe_out = exever.res
!endif

!ifndef verrc_exe
verrc_exe = $(proj_name)
!endif

!ifndef patch_level
patch_level = 0
!endif

$(verrc_exe_out): ./genverrc.exe $(fe_misc_dir)/c/genverrc.c $(verrc_exe_skel)
!ifeq verbose 1
        $[@ $]@ $(verrc_exe_int) $$ $(verrc_exe) $(patch_level)
        $(rc) $(rc_flags) $(inc_path) $(verrc_exe_int) -fo=$^@
!else
        @$[@ $]@ $(verrc_exe_int) $$ $(verrc_exe) $(patch_level)
        @echo rc $@
        @$(rc) $(rc_flags) $(inc_path) $(verrc_exe_int) -fo=$^@
!endif

$(verrc_dll_out): ./genverrc.exe $(fe_misc_dir)/c/genverrc.c $(verrc_dll_skel)
!ifeq verbose 1
        $[@ $]@ $(verrc_dll_int) $$ $(verrc_dll) $(patch_level)
        $(rc) $(rc_flags) $(inc_path) $(verrc_dll_int) -fo=$^@
!else
        @$[@ $]@ $(verrc_dll_int) $$ $(verrc_dll) $(patch_level)
        @echo rc $@
        @$(rc) $(rc_flags) $(inc_path) $(verrc_dll_int) -fo=$^@
!endif
