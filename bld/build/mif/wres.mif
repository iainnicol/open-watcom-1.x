# WRES library finder.  You must define:
# ~~~~~~~~~~~~~~~~~~~
# 1. host_os and host_cpu
# 2. If 32-bit stack-based, define 'stack'
# 3. If 16-bit, define memory_model_i86 = l, m, c, or s (l is default)
# 4. For large memory model pegged version, define 'pegged'
# 5. For large memory model windows version, define 'windows'
#
!ifdef __UNIX__
wres_lib_path = $(wres_dir)/lib/
!else
wres_lib_path = $(wres_dir)\lib\
!endif

!ifdef pegged
wres_lib_l = $(wres_lib_path)wreslp.lib
!else ifdef windows
wres_lib_l = $(wres_lib_path)wreslw.lib
!else
wres_lib_l = $(wres_lib_path)wresl.lib
!endif
wres_lib_m = $(wres_lib_path)wresm.lib
wres_lib_c = $(wres_lib_path)wresc.lib
wres_lib_s = $(wres_lib_path)wress.lib
wres_lib_i86 = $(wres_lib_$(memory_model_i86))

!ifdef stack
wres_lib_386 = $(wres_lib_path)wresfs.lib
!else
wres_lib_386 = $(wres_lib_path)wresf.lib
!endif

!ifeq memory_model_386 s
wres_lib_qnx_386 = $(wres_lib_path)wressqnx.lib
!else
wres_lib_qnx_386 = $(wres_lib_path)wresf.lib
!endif

wres_lib_nt_axp = $(wres_lib_path)wresaxp.lib
wres_lib_nt_386 = $(wres_lib_path)wresf.lib
!ifdef $(proj_name)_rtdll
!ifeq $(proj_name)_rtdll 1
wres_lib_nt_axp = $(wres_lib_path)wresaxpd.lib
wres_lib_nt_386 = $(wres_lib_path)wresfdll.lib
!endif
!endif

!ifdef bootstrap
wres_lib = $(wres_dir)/$(%OBJDIR)/libwres.a
!else ifdef wres_lib_$(host_os)_$(host_cpu)
wres_lib = $(wres_lib_$(host_os)_$(host_cpu))
!else
wres_lib = $(wres_lib_$(host_cpu))
!endif
