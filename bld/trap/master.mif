proj_name = trap

!ifndef trap_autodepends
trap_autodepends = .AUTODEPEND
!endif

suppress_zc = 1

.EXTENSIONS : .res .rc

#
# Common stuff between trap file and server implementations
#
# Macros:
#       os              - Name of the operating system the executable is
#                         being built for. Look at the "comp_*" macros
#                         below for the list of acceptable names (required).
#       srv             - Name of the remote link that the server/trap file
#                         is implementing. Use "lcl" for "STD" trap
#                         files (required).
#       cpu             - Name of the CPU that the server/trap is being
#                         built for (x86,axp,ppc,etc).
#       name            - Root name of the server/trap file. A name is
#                         created from the "srv" macro if this is not
#                         defined (optional).
#       extra_objs      - names of extra object files to be included in the
#                         the link (optional, but I can't think of a case
#                         where it wouldn't be defined).
#       extra_dobjs     - names of extra object files to be included in the
#                         debugging version. If not defined, extra_objs is
#                         used (options).
#       extra_incs      - A list of extra directories to search for include
#                         files (optional).
#       extra_srcs      - A list of extra directories to search for source
#                         files (optional).
#       extra_libs      - A (space separated) list of extra libraries to
#                         include in the link (optional).
#       extra_cflags    - Extra C compiler flags (optional).
#       extra_aflags    - Extra wasm flags (optional).
#       extra_linker    - Extra linker directives (optional).
#       extra_deps      - Extra dependencies for executable (optional).
#       extra_cmds      - Extra commands to be executed when creating
#                         the executable (optional).
#       resource_file   - root name of a resource file (optional).

!ifndef memory_model_i86
memory_model_i86 = c
!endif

!ifeq host_os qnx
memory_model_386 = s
!endif

fpu_flags_dos_i86   = -fpc
fpu_flags_dos_386   = -fpc
fpu_flags_os2_i86   = -fpc
fpu_flags_os2_386   = -fpc
fpu_flags_win_i86   = -fpc
fpu_flags_nt_386    = -fpc
fpu_flags_linux_386 = -fpc

additional_cleanup = *.d32 *.trp

!include cproj.mif
!include deftarg.mif
!include defrule.mif

!ifeq which SERVER
!include $(trap_dir)/serv.mif
!else
!include $(trap_dir)/trap.mif
!endif

# cflags stuff
###############
extra_c_flags += -D$(which) -DMD_$(cpu) -s $(extra_cflags)

!ifdef japanese
extra_c_flags += -DJAPANESE_MESSAGES
!endif

!ifeq host_os nov
extra_c_flags_386 += -3s
!else ifeq os ads
extra_c_flags_386 += -3s
!endif

!ifeq which TRAP
!ifeq host_cpu i86
extra_c_flags_os2 += -zu
extra_c_flags_win += -zu-bd
extra_c_flags_dos += -zu
!endif
!endif

# lflags stuff
###############
libs_x86_os2            = clibc
libs_x86_os2v2          = clib3r
libs_x86_qnx            = $(lang_root)/lib386/qnx/clib3r
!ifdef __LINUX__
libs_x86_linux          = $(clib_dir)/library/linux.386/mf_r/clib3r
!else
libs_x86_linux          = $(lang_root)/lib386/linux/clib3r
!endif
libs_x86_win            = clibc
!ifeq memory_model_i86 l
libs_x86_dos            = clibl
!else
libs_x86_dos            = clibc
!endif
libs_x86_rsi            = clib3r
libs_x86_ads            = clib3s
libs_x86_pls            = clib3r
libs_x86_nt             = clib3r
libs_x86_nlm            = math3s

libs_axp_nt             = clib

libs_ppc_nt             = clib

!ifeq host_os dos
extra_libs += dbgstr.lib
!endif

!ifeq host_os nov
mknver_c = $(trap_dir)/c/mknver.c
!endif

!ifndef name
!ifeq srv lcl
name = std
!else ifeq which SERVER
name = $(srv)serv
!ifeq os win
name+=w
!endif
!else
name = $(srv)
!endif
!endif

remote_objs = &
        $($(which)_remote_objs) &
        packet.obj &
        $(os)noth.obj &
        $(srv)link.obj &

!ifeq os win
targ = windows
!else ifeq os nlm
targ = netware
!else ifeq os pls
targ = dos
!else ifeq os ads
targ = dos
!else ifeq os rsi
targ = dos
!else ifeq os os2v2
targ = os2
!else
targ = $(os)
!endif

!ifeq release 0
default_targ    = d
!else
default_targ    = w
!endif

first : $(default_targ) .SYMBOLIC
        @%null

save_name =$+$(name)$-
name = $(name_debug)$(save_name)
!ifeq release 1
!ifdef test
name_debug=z
!else
name_debug=
!endif
!else
!ifdef test
name_debug=t
!else
name_debug=d
!endif
!endif
target = $+$(targ_$(cpu)_$(os))$-

trperr_h = _err.gh
jtrperr_h = _jerr.gh
mkstr_c = $(trap_dir)/c/mkstr.c
trap_msg = $(trap_dir)/h/trap.msg
!ifeq host_os nov
nversion_tmp = ./nversion.tmp
!else
nversion_tmp =
!endif

w : .SYMBOLIC $(trperr_h) #$(jtrperr_h)
        @%make $(target)

d : .SYMBOLIC $(trperr_h) $(jtrperr_h)
        @%make $(target)

./mkstr.exe: $(mkstr_c) $(trap_msg)
        $(bld_cl) $(wcl_util_opts) -I"$(trap_dir)/h" $[@

!ifeq host_os nov

$(nversion_tmp): ./mknver.exe
    $[@ $^@

./mknver.exe: $(mknver_c) .AUTODEPEND
        $(bld_cl) $(wcl_util_opts) -I"$(trap_dir)/h" -I"$(watcom_dir)/h" $[@
!endif

$(trperr_h) : ./mkstr.exe
        $[@ $^@

./jmkstr.exe: $(mkstr_c) $(trap_msg)
        $(bld_cl) $(wcl_util_opts) -I"$(trap_dir)/h" -DJAPANESE_MESSAGES $[@

$(jtrperr_h) : ./jmkstr.exe
        $[@ $^@

!ifndef extra_dobjs
extra_dobjs = $(extra_objs)
!endif

!ifeq release 1
objs = $($(which)_objs) mxutil.obj $(extra_objs)
!else
objs = $($(which)_objs) mxutil.obj $(extra_dobjs)
!endif

!ifndef substitute_linker

$(target) : $(objs) $(extra_libs) $(resource_file) $(extra_deps) $(__MAKEFILES__) $(nversion_tmp)
        $(linker) $(mode_lflags) op map $(sys_$(cpu)_$(os)) name $^@ &
                file {$(objs)} &
                library {$(libs_$(cpu)_$(os)) $(extra_libs)} &
                $(extra_linker)
!ifdef resource_file
        $(rc) -bt=$(targ) $(resource_file) $^@
!endif
!ifdef extra_cmds
        $(extra_cmds)
!endif

!endif

dbgstr.lib : dbgstr.obj
        $(librarian) $^@ +$[@

inc_dirs += -I. -I"../h" -I"$(dig_dir)/h" -I"$(trap_dir)/common/$(os)" 
inc_dirs += -I"$(trap_dir)/common" -I"$(trap_dir)/h"
!ifeq host_os nov
inc_dirs += -I"$(ow_nwoss_root)/nw$(nlm_ver)/h" 
inc_dirs += -I"$(ow_nwoss_root)/nw$(nlm_ver)/src" -I"$(ow_nwoss_root)/common/h"
!endif

.c: ../c;../../c;$(trap_dir)/common/$(os);$(trap_dir)/common;$(trap_dir)/c;$(extra_srcs)
.cpp: ../c;../../c;$(trap_dir)/common/$(os);$(trap_dir)/common;$(trap_dir)/c;$(extra_srcs)
.asm: ../asm;../../asm;$(trap_dir)/common/$(os);$(trap_dir)/common;$(extra_srcs)
.rc: ../c;$(trap_dir)/common/$(os);$(trap_dir)/common;$(extra_srcs)

# implicit rules
#################
.rc.res: .AUTODEPEND
        $(rc) -r $(inc_path) -bt=$(targ) $[@ -fo=$^@
