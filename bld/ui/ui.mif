proj_name = ui
name = ui

target: $(name).lib

ui_trmem = 1

!include cproj.mif
!include defrule.mif
!include deftarg.mif

.c: ../c;../../c;$(extra_cdir);$(trmem_dir)
.h: ../h;../../h;$(extra_hdir)

inc_dirs += -I"../h" -I"../../h"

# memory tracker routines
extra_c_flags_trmem = $(trmem_cflags)

# memory tracker cover routines
extra_c_flags_uialloc = $(trmem_cover_cflags)

obj = obj
!include ../objfiles.mif
objfiles += $(trmem_objs)

!ifeq release 1
extra_c_flags += -os-s
!endif

!include trmem.mif

$(name).lib: $(objfiles)
        $(librarian) -b $^@ $<

!ifeq SAMPLE_MODE WIN_C_M_J
sample.exe : samplew.obj sampdial.obj $(name).lib
        %create sample.lnk
        %append sample.lnk system windows op m D A library $(name).lib
        %append sample.lnk n sample
        %append sample.lnk f samplew f sampdial
        %append sample.lnk import DEATH GDI.121
        %append sample.lnk import RESURRECTION GDI.122
        wlink @sample.lnk
!else ifeq SAMPLE_MODE WIN_C_M
sample.exe : samplew.obj sampdial.obj swap.obj $(name).lib
        %create sample.lnk
        %append sample.lnk system windows op m D A library $(name).lib
        %append sample.lnk n sample
        %append sample.lnk f samplew f sampdial f swap
        %append sample.lnk import DEATH GDI.121
        %append sample.lnk import RESURRECTION GDI.122
        wlink @sample.lnk
!else
sample.exe : sample.obj sampdial.obj $(name).lib
        $(linker) $(lflags) op q,m,st=32k library $(name).lib n sample f sample, sampdial
!endif

make: .SYMBOLIC
    %create mkmk.cmd
    @%append mkmk.cmd  -c & -m objfiles.mif -q 50
    @%append mkmk.cmd  nopath ../c/*.c c/*.c h/*.h ../h/*.h  path
    @%append mkmk.cmd  -i.h -isample.c -isampdial.c -isamplew.c
    mkmk @mkmk.cmd
    erase mkmk.cmd
