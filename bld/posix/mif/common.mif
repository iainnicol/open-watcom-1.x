#
#   COMMON:     common definitions of compiler and linker
#

#
#   Macros used by this file:
#
#   posix_dir   Must point to the root of the posix project.
#
#   targos      Must be a valid targos.
#               i.e. include $(posix_dir)\mif\targos.mif before this file.
#
#   cflags      If defined, these options to the compiler override the
#               defaults selected by this file.
#
#   make_lib    If this is defined then wmake was invoked to make posixlib.
#
#   if make_lib isn't defined, then the following must be defined:
#
#   name        The name of the command which is being built.  The
#               directory $(posix_dir)\src\$(name) must exist, and
#               contain the source for the command.

#
#       some people don't have the linker variable in their makeinit
#

!include cproj.mif

!ifndef linker
linker=wlink
!endif

!ifndef watcom_h
watcom_h = $(watcom_dir)\h
!endif

!ifeq           targos  dosos2
!ifndef model
model=c
!endif
!else ifeq      targos  dos
!ifndef model
model=c
!endif
!else ifeq      targos  os2386
!ifndef model
model=f
!endif
!else ifeq      targos  pharlap
!ifndef model
model=f
!endif
!else ifeq      targos  nt386
!ifndef model
model=f
!endif
!else ifeq      targos  qnx
!ifndef model
model=s
!endif
!else ifeq      targos  qnx16
!ifndef model
model=c
!endif
!else ifeq      targos  ntaxp
!ifndef model
model = f
!endif
!endif

.EXTENSIONS:
.EXTENSIONS: .exe
.EXTENSIONS: .cbj .sbj .lbj .mbj .fbj .obj
.EXTENSIONS: .asm .c

posixlib=$(posix_dir)\misc\$(targos)\posix$(model).lib
obj_dir = $(posix_dir)\src\$(name)\$(targos)

#
#       compiler options
#

#
#       define options for each specific operating system supported
#

librarian       = wlib

!ifeq           targos  dosos2
host_os         = os2
host_cpu        = i86
compiler        = $(comp286)
env_variable    = wcc
targos_cflags   = -m$(model)-bt=os2
include_dirs    = $(lang_root)\h;$(inc_dirs_sys_os2);$(watcom_h)

!else ifeq      targos  dos
compiler        = $(comp286)
env_variable    = wcc
targos_cflags   = -m$(model)-bt=dos
include_dirs    = $(lang_root)\h;$(watcom_h)

!else ifeq      targos  os2386
host_os         = os2
host_cpu        = 386
compiler        = $(comp386)
env_variable    = wcc386
targos_cflags   = -mf-bt=os2
include_dirs    = $(lang_root)\h;$(inc_dirs_sys_os2);$(watcom_h)

!else ifeq      targos  pharlap
compiler        = $(comp386)
env_variable    = wcc386
targos_cflags   = -mf-bt=pharlap
include_dirs    = $(lang_root)\h;$(watcom_h)

!else ifeq      targos  nt386
compiler        = $(comp386)
env_variable    = wcc386
targos_cflags   = -bt=NT -mf
include_dirs    = $(watcom_nt_h);$(lang_root)\h;$(watcom_h)

!else ifeq      targos  qnx
compiler        = $(comp386)
env_variable    = wcc386
targos_cflags   = -ms-bt=qnx
include_dirs    = $(lang_root)\qh;$(watcom_h)

!else ifeq      targos  qnx16
compiler        = $(comp286)
env_variable    = wcc
targos_cflags   = -mc-bt=qnx
include_dirs    = $(lang_root)\qh;$(watcom_h)

!else ifeq      targos  ntaxp
compiler        = $(compaxp)
env_variable    = wccaxp
targos_cflags   = -bt=NT
include_dirs    = $(lang_root)\h\nt;$(lang_root)\h;$(watcom_h)
librarian       = wlibaxp
linker          = wlink


!endif

common_cflags   = -zq-w4-we-d1-oxs

!ifndef make_lib
.obj: $(obj_dir)
.c: $(posix_dir)\src\$(name);$(posix_dir)\misc
!else
.c: $(posix_dir)\misc;$(lang_root)\src\startup
!endif

.before:
!ifndef make_lib
        set include=$(posix_dir)\src\$(name);$(posix_dir)\h;$(include_dirs)
!ifdef __MSDOS__
        @!if not exist $(obj_dir)\nul md $(obj_dir)     # for dos
!else
        @!if not exist $(obj_dir) md $(obj_dir)         # for os2
!endif
        @set $(env_variable)=-fo=$(obj_dir)\.obj -d__OS_$(targos)__ -dSTANDALONE_RX
!else
        set include=$(posix_dir)\h;$(include_dirs)
        @set $(env_variable)=-d__OS_$(targos)__ -dSTANDALONE_RX
!endif

!ifndef cflags
cflags = $(targos_cflags)$(common_cflags)
!endif

.c.obj:
        $(compiler) $[@ $(cflags) $(extra_cflags)
.c.cbj:
        $(compiler) $[@ $(cflags) $(extra_cflags)
.c.lbj:
        $(compiler) $[@ $(cflags) $(extra_cflags)
.c.fbj:
        $(compiler) $[@ $(cflags) $(extra_cflags)
.c.sbj:
        $(compiler) $[@ $(cflags) $(extra_cflags)
.c.mbj:
        $(compiler) $[@ $(cflags) $(extra_cflags)
