.ERASE

!ifeq form_exe pharlap
exe = exp
!else
exe = exe
!endif

!ifdef __watfor__
.extensions: .sed
!else
.extensions:
.extensions: .$(exe) .lib .obj .chk .c .h .inc .mif .sed
!endif

.h .inc:   ../h;$(%include);$(watcom_h)
.c:     ../c;$(lang_root)/src/startup
.mif:   ../mif
.sed:   ../sed

.BEFORE
    @set include=$(%include);.;../h

!ifdef trmem
.c .h: $(utils_root)/trmem
!endif

!include $(womp_dir)/mif/objfiles.mif

!ifeq release 0
default_cflags = $(opts_cc)/d__FNAME__="$[&"
!else
default_cflags = $(opts_cc)/dNDEBUG
!endif

!ifndef __watfor__
.c.obj:
    $(cc) $[@ $(default_cflags)

.c.chk: .symbolic
    $(cc) $[@ /zs$(default_cflags)
!endif

womp : womp.$(exe) wompj.$(exe) .symbolic
    @%null

womp.$(exe) wompj.$(exe) : womp.res wompj.res womp.lnk $(objs)
!ifeq form_exe pharlap
    wlink NAME womp @womp.lnk lib wresf
!else
    wlink NAME womp @womp.lnk lib wresl
!endif
!ifeq form_exe os2
    $(binder)\bind.exe womp.exe $(doscalls) $(apilib)
!endif
    cp womp.$(exe) wompj.$(exe)
    wstrip /a /r /q womp.$(exe) . womp.res
    wstrip /a /r /q wompj.$(exe) . wompj.res
#
# We may have to copy ../h/wmpmsg.gh up to the root.
# Depends on where WASM and WATFOR expect it....
#    copy msg.h ..

womp.lnk : objfiles.mif master.mif
    %create $^@
!ifeq form_exe os2
!ifdef tools_8_0
    @%append $^@ FORM $(form_exe) pmc option heap=8k,newfiles
!else
    @%append $^@ SYSTEM $(form_exe) pmc option heap=8k,newfiles
!endif
!else
!ifdef tools_8_0
    @%append $^@ FORM $(form_exe)
!else
    @%append $^@ SYSTEM $(form_exe)
!endif
!endif
!ifeq release 0
    @%append $^@ DEBUG all
!endif
!ifeq form_exe pharlap
    @%append $^@ OPTION offset=64k
!endif
    @%append $^@ OPTION quiet,map,stack=16k
    @for %i in ($(objs)) do @%append $^@ FILE %i

womp.res : ../h/womp.rc $(womp_dir)/womp.msg usage.rc wpmsg.h wmpmsg.gh
    $(wrce) -r -q /dENGLISH -fo=$^@ $[@

wompj.res : ../h/womp.rc $(womp_dir)/womp.msg usagej.rc wpmsg.h wmpmsg.gh
    $(wrck) -r -q /dJAPANESE -fo=$^@ $[@

usage.rc : ../usage.sp
    wsplice -kIS_RC -kENGLISH -t8 -f "%+(MSG_USE_BASE+%$#-1), \"%s\""$[@ $@

usagej.rc : ../usage.sp
    wsplice -kIS_RC -kJAPANESE -t8 -f "%+(MSG_USE_BASE+%$#-1), \"%s\""$[@ $@

# ../h/wmusage.h : ../usage.sp
#    wsplice -kENGLISH -f "%+$#define MSG_USAGE_LN_%$# (MSG_USE_BASE+%$#-1)"$[@ $@
#    wsplice -f "%s%+"$@ -o "$#define MSG_USAGE_LAST (MSG_USE_BASE+%$#+10)" $@

wmpmsg.gh : $(womp_dir)/womp.msg
    bvi -d -q -i -s ../h/makemsg.vi -p"$^@" $[@

!include $(womp_dir)/mif/depends.mif

wildargv.obj : $(lang_root)/src/startup/wildargv.c
    $(cc) $[@ $(opts_cc)

!ifdef trmem
.before:
    @set include=$(%include);$(utils_root)/trmem

memutil.obj : memutil.c
    $(cc) $[@ $(default_cflags)/dTRACK/of+

trmem.obj : trmem.c
    $(cc) $[@ $(opts_cc)
!endif

# the comm output is as follows:
#
# <tab>A line in chkmsg.2 not in chkmsg.1 (A def'd but unref'd line)
# <notab>A line in chkmsg.1 not in chkmsg.2 (A ref'd but undef'd line)
#
chkmsg : ../h/msg.inc ../c/*.c
    sed -f ..\sed\msgref.sed ..\c\*.c | sort -u >chkmsg.1
    sed -f ..\sed\msgdef.sed ..\h\msg.inc | sort -u >chkmsg.2
    -comm -3 chkmsg.1 chkmsg.2 | tee chkmsg
    wc -l chkmsg
    rm chkmsg.?

clean : .symbolic
    rm -f *.h *.rc *.err *.?bj *.ex? *.lnk *.map chkmsg chkmsg.?

skipmem.obj : skipmem.c
    $(cc) $[@ $(opts_cc)/d_HOSTOS=_DOS/dREALLOC

