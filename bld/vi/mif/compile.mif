c_dirs_root = $(vi_dir)/$(host_OS)
!ifeq host_OS linux
c_dirs_root = $(vi_dir)/unix
!endif
!ifdef curses
c_dirs_root = $(vi_dir)/curses
!endif

!ifdef sys_windowed
! ifeq host_OS nt
c_dirs_root = $(vi_dir)/nt;$(vi_dir)/win
! else
c_dirs_root = $(vi_dir)/win
! endif
c_dirs = $(vi_dir)/c;$(c_dirs_root);$(vi_dir)/dos;$(sdk_dir)/misc;$(vi_dir)/ctl
!else
c_dirs = $(vi_dir)/c;$(c_dirs_root);$(vi_dir)/ui
!endif

.c : $(c_dirs)

.asm : $(c_dirs)


!ifeq vi_trmem 1
extra_c_flags_trmem = -dTRMEM
!endif


!ifdef is286
extra_c_flags_i86_dos = -D__286__ -2
!else ifdef vroomed
extra_c_flags_i86_dos = -D__V__ -2
!else
extra_c_flags_i86_dos = -D__86__
!endif

extra_c_flags_i86_os2 = -2
extra_c_flags_i86_qnx = -2
extra_c_flags_i86_win = -fpc -zW -2 -zc

extra_c_flags_i86 = $(extra_c_flags_i86_$(host_OS))


!ifdef curses
extra_c_flags_386_dos = -D__PHAR__ -D__CURSES__
!else
extra_c_flags_386_dos = -zff -D__4G__
!endif

!ifdef sys_windowed
extra_c_flags_386_nt = -D__WIN__
extra_c_flags_axp = -D__WIN__
!endif
extra_c_flags_386_win = -zw -s

extra_c_flags_386 = $(extra_c_flags_386_$(host_OS))

extra_c_flags = $(extra_c_flags_trmem) $(extra_c_flags_debug) -DNOUSE3D=1 -ai

.c.obj:
        $(cc) $(cflags) $(extra_c_flags_$[&) $[@ -fo=.obj
.c.ybj:
        $(cc) $(cflags) $(extra_c_flags_$[&) $[@ -fo=.ybj

!ifdef vroomed
.c.ubj:
        $(cc) -zu $(cflags) $(extra_c_flags_$[&) $[@ -fo=.ubj
!else
.c.ubj:
        $(cc) $(cflags) $(extra_c_flags_$[&) $[@ -fo=.ubj
!endif


!ifeq host_CPU 386
wasm_flags = -3
!endif
.asm.obj:
        wasm $(wasm_flags) $[*
#       masm $(masm_flags) /Mx /Zd $[*;

!ifdef __LINUX__
.ctl.ch:
        $(bld_bin)/parsectl $[@ $[&.ch Ctl_$^&
.dyn.dh:
        $(bld_bin)/parsedyn $[@ $[&.dh Dyn_$^&
!else
.ctl.ch:
        $(bld_bin)\parsectl $[@ $[&.ch Ctl_$^&
.dyn.dh:
        $(bld_bin)\parsedyn $[@ $[&.dh Dyn_$^&
!endif
