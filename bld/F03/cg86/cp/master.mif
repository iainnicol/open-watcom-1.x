proj_name = F03

!ifndef F03_autodepends
F03_autodepends = .AUTODEPEND
!endif

!include cproj.mif
!include deftarg.mif
!include defrule.mif

!include $(cg_dir)/mif/fe.mif
!include $(dwarf_dir)/dw/client.mif
!include wres.mif

!ifeq release 0
F03_trmem = 1
!endif

inc_dirs=$(F03_dir)/cg86/cp/h;$(F03_dir)/cg86/h;$(cg_inc_dirs);$(F03_dir)/h;$(dwarf_dir)/dw/h;$(comp_cfg_dir)/h

!ifeq target_CPU 386
inc_dirs+=;$(wasm_dir)/h
pre_deps_wasm = inlnops.gh msg.gh
!else ifeq target_CPU i86
inc_dirs+=;$(wasm_dir)/h
pre_deps_wasm = inlnops.gh msg.gh
!else ifeq target_CPU axp
inc_dirs+=;$(as_dir)/h
!else ifeq target_CPU ppc
inc_dirs+=;$(as_dir)/h
!endif

# define _USE_RESOURCES_ so that WASM error messages come from resources
extra_c_flags = -d_USE_RESOURCES_
extra_c_flags_i86 = -fpc -zp1
extra_c_flags_386 = -fpc -zp1

.h: $(F03_dir)/h;$(F03_dir)/cg86/h;$(F03_dir)/cg86/cp/h
.c: $(F03_dir)/cg86/cp/c;$(F03_dir)/cg86/c;$(F03_dir)/cp;$(F03_dir)/c;$(wasm_dir)/c;$(trmem_dir);

!ifeq host_CPU axp
asm_opts  = -oc -zq -we -i="$(F03_dir)/cg86/inc" -i="$(watcom_dir)/h"
.asm: $(F03_dir)/cg86/axpasm
.asm.obj:
    $(as) $[* $(asm_opts)
!endif

!include ../files.mif

!ifeq F03_trmem 1
#extra_c_flags = -DTRMEM
fobjs += trmem.obj trmemcvr.obj
!endif

exename_i86 = wfc
exename_386 = wfc386
exename_axp = wfcaxp
exename_ppc = wfcppc
target_exe  = $(exename_$(target_CPU))

!ifdef mkstubs
F03_cg_libs = $(cg_stub_libs);
!else ifeq release 1
F03_cg_libs = $(cg_libs)
!else
F03_cg_libs = $(cg_debug_libs)
!endif

extra_c_flags_trmem = -dTRMEM -of+
extra_c_flags_trmemcvr = -dTRMEM -of+

extra_l_flags = op map

# Need lots of stack for NT because code gen turns off safe recurse.
extra_l_flags_nt = op stack=1024k commit stack=32k

flibs = $(wres_lib) $(dwarf_dw_lib) $(asminline_lib)

$(target_exe).exe : $(pre_deps_wasm) $(fobjs) errmsg.res $(cg_deps) $(flibs)
    @%create $(target_exe).lnk
    @%append $(target_exe).lnk name $^@
    @for %i in ($(fobjs)) do @%append $(target_exe).lnk file %i
    @for %i in ($(flibs)) do @%append $(target_exe).lnk lib %i
    @%append $(target_exe).lnk $(F03_cg_libs)
    $(linker) $(lflags) @$(target_exe).lnk
!ifeq host_OS osi
    $(binder)\w32bind $(target_exe).rex $^@ $(binder)\os2ldr.exe
    erase $(target_exe).rex
!endif
    wstrip -q -a -r $^@ . errmsg.res

option.obj : option.c optinfo.h

errmsg.res : ../c/errmsg.rc ../h/errmsgi.rc ../h/errmsg3.rc ../h/errcod.h ../h/errcodi.h ../h/errcod3.h
    @set include=$(inc_path)
    $(rc_aui) $[@ -fo=$^@

./mkopcode.exe: $(wasm_dir)/mkopcode.c
        $(bld_cl) $(wcl_util_opts) $[@

inlnops.gh: ./mkopcode.exe $(wasm_dir)/inlnops.tok
        $[@ $(wasm_dir)/inlnops.tok $^@

msg.gh : $(wasm_dir)/h/asmshare.msg
        $(vi) -s $(wasm_dir)/h/makemsg.vi -p "$^@ MSG_RC_BASE" $[@
