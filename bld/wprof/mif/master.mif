proj_name = wprof
fname = wprof$(machine)

!ifeq PM 1
sys_windowed = 1
!endif
!ifeq host_OS win
sys_windowed = 1
!endif
!ifeq host_OS nt
sys_windowed = 1
!endif

!include cproj.mif
!include defrule.mif

.mif : ../mif

!include wproflib.mif
!include wprofobj.mif

.c : ../c;$(dig_srcs);$(watcom_dir)/c
.h : ../h

!ifeq host_OS qnx
exe = qnx
!else
exe = exe
!endif

inc_dirs = ../h;$(wsample_dir)/h;$(aui_dir)/h;$(gui_dir)/h;$(trmem_dir);$(dig_dir)/h

.BEFORE:
        set INCLUDE=$(inc_path)

extra_c_flags   = -s

!ifdef on_build_machine
extra_c_flags   += -dNDEBUG
!endif
!ifdef check
extra_c_flags   += -zs
!endif
!ifdef wprof_trmem
!ifneq host_CPU AXP
extra_c_flags   += -of+
!endif
!endif

extra_c_flags_axp       = -d_OS=_OS_NT
extra_c_flags_386_nt    = -d_OS=_OS_NT
extra_c_flags_386_dos   = -d_OS=_OS_DOS
extra_c_flags_386_qnx   = -ms -D_OS=_OS_QNX
extra_c_flags_386_os2   = -d_OS=_OS_OS2
!ifeq PM 1
extra_c_flags_386_os2   += -dOS2_PM=1
!endif
extra_c_flags_i86_qnx   = -d_OS=_OS_QNX -zt32
extra_c_flags_i86_win   = -d_OS=_OS_WIN -zW

extra_c_flags_386       = -fpc $(extra_c_flags_386_$(host_OS))
extra_c_flags_i86       = -fpc $(extra_c_flags_i86_$(host_OS))

# remove these lines when the source is fixed
cflags_all              = -zq -w4

extra_l_flags_nt        = op stack=30k
extra_l_flags_os2       = op stack=32k
extra_l_flags_qnx       = op stack=32k, offset=36k, priv=3, res=wprof.u
extra_l_flags_dos       = op map,stack=20k export DOS4GOPTIONS=_DOS4GOPTIONS

rc_flags_win            = -k -bt=windows
rc_flags_nt             = -k -bt=nt
rc_flags_os2            =
rc_flags                = $(rc_flags_$(host_OS))

resfile_dos             = wprofui.res
resfile_qnx             = wprofui.res
!ifneq PM 1
resfile_os2             = wprofui.res
!endif
resfile                 = $(resfile_$(host_OS))
!ifeq sys_windowed 1
resfile                 = wprof.res
!ifeq host_OS os2
rc                      = $(rc_os2)
!endif
!endif

$(fname).$(exe) : eraseall.obj $(objs) $(sys_objs) $(dip_objs) $(mad_objs) $(wprof_libs) $(sys_libs) $(resfile)
    @if exist finger.obj del finger.obj
    @%make finger.obj
    $(linker) name $(fname) $(lflags) op map file {$(objs) $(dip_objs) $(mad_objs) finger.obj} lib {$(wprof_libs) $(sys_libs)}
!ifdef resfile
!ifeq sys_windowed 1
!ifeq host_OS os2
    $(rc) $(rc_flags) $(resfile) $(fname).exe
!else
    $(rc) $(rc_flags) $(resfile) $(fname).exe
!endif
!else
    wstrip -q -a -r  $(fname).$(exe) . $(resfile)
!endif
!endif

eraseall.obj : ../compile.gbl
    @if exist *.obj del *.obj
    wtouch eraseall.obj

!ifeq host_OS os2
wprof.res : auistr.gh wprof.rc
        @set oinc=$(%include)
        set include=$(lang_root)/h/os2;$(rcinclude);$(%include)
        wcc -dRC -i"$(aui_dir)/os2386.pm;$(rcinclude)" -p -pw=0 -fo=wprof.i wprof.rc
#       wcc -dRC -i"$(aui_dir)/os2386.pm;$(rcinclude)" -p -pw=0 -fo=wprofj.i wprof.rc -dJAPANESE_MESSAGES

!ifndef %use_os2tk_stuff

        set opath=$(%path)
        set path=$(lang_root)/binp

!endif

        $(rc) -i"$(inc_dirs_sys)" -r foros2pm.rc
        cp foros2pm.res wprof.res

!ifndef %use_os2tk_stuff

        set path=$(%opath)

!endif

        @set include=$(%oinc)
!else
!ifeq sys_windowed 1
wprof.res : auistr.gh wprof.rc
        $(rc) -r $(rc_flags) wprof.rc
!endif
!endif

msg.obj : msg.c msg.h

msgstr.obj : msgstr.c msg.h

rcfiles = &
    $(gui_dir)/h/gui.rc &
    $(gui_dir)/h/gui.msg &
    $(aui_dir)/h/aui.rc &
    $(aui_dir)/h/dlgrx.dlg &
    $(aui_dir)/h/dlgsrch.dlg &
    $(aui_dir)/h/dlgsrcha.dlg &
    $(aui_dir)/h/japrx.dlg &
    $(aui_dir)/h/japsrch.dlg &
    $(aui_dir)/h/japsrcha.dlg

rcinclude=.;../h;$(dig_dir)/h;$(aui_dir)/h;$(gui_dir);$(gui_dir)/h;$(brinfo_dir)/merge/res

wprofui.res : ../h/wprofui.rc auistr.gh $(rcfiles)
    $(rc) -r -q -bt=windows -i="$(rcinclude);$(lang_root)/h/win" $[@ -fo=$^@

auistr.gh : $(aui_dir)/h/aui.msg $(aui_dir)/c/mkstr.c
        $(bld_cl) -i"$(aui_dir)/h" $]@
        mkstr $^@
        @rm -f mkstr.*

clean: .SYMBOLIC .EXPLICIT
        @if exist *.?bj del *.?bj
        @if exist *.lnk del *.lnk
        @if exist *.exe del *.exe
        @if exist *.dll del *.dll
        @if exist *.lib del *.lib
        @if exist *.res del *.res
        @if exist *.clb del *.clb
        @if exist *.err del *.err
        @if exist *.map del *.map
        @if exist *.sym del *.sym

