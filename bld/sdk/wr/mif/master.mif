#  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#  %       Copyright (C) 1992, by WATCOM Systems Inc. All rights     %
#  %       reserved. No part of this software may be reproduced      %
#  %       in any form or by any means - graphic, electronic or      %
#  %       mechanical, including photocopying, recording, taping     %
#  %       or information storage and retrieval systems - except     %
#  %       with the written permission of WATCOM Systems Inc.        %
#  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#
#  Date         By              Reason
#  ----         --              ------
#  21 May 93    Wes Nelson      initial implementation
#

proj_name = wr
name = wr

CPPFILE=pp

.extensions:
.extensions: .lib .dll .mbj .cbj .rbj .obj .tbj
.extensions: .$(CPPFILE) .rpp .res .c .rc
.extensions: .dlg .h .tmp .msg .mif

.mif : $(mif_path)
sys_dll = 1
!include cproj.mif
MODEL = l
WINDOWS = 1
!include wres.mif

object =    wrmain.obj wrmem.obj wrmsg.obj wrfindt.obj wrtmpfil.obj &
                wrrdw16.obj wrrdwnt.obj wrrdres.obj wrimg.obj &
                wrsvexe.obj wrsvres.obj &
                wridfile.obj wrinfo.obj wrstrdup.obj &
                wrrcmem.obj wrlist.obj wrdel.obj wrstr.obj wrclean.obj &
                wrdata.obj wrnamoor.obj wrwresid.obj &
                wrselft.obj wrmemf.obj wrdmsg.obj wrctl3d.obj &
                wrbitmap.obj wricon.obj wr_wres.obj wrselimg.obj &
                wrrnames.obj wrhash.obj wredit.obj wrutil.obj &
            trmem.tbj trmemcvr.tbj &
            preproc.cbj ppexpr.cbj ppmacro.cbj &
            rcerrprt.obj &
            palette.mbj ldstr.mbj jdlg.mbj &
            pass2.rbj exeseg.rbj exeres.rbj rcstr.rbj ppalloc.rbj &
                exeutil.rbj exeobj.rbj exerespe.rbj rcio.rbj &
                global.rbj semstr.rbj semsingl.rbj semantic.rbj semraw.rbj &
                errors.rbj tmpctl.rbj autodep.rbj layer0.rbj param.rbj &
                dbtable.rbj swchar.rbj sharedio.rbj


!ifeq host_CPU axp
OF =
!else
OF = -of+
!endif

extra_c_flags_nt_386    = -fpc
extra_c_flags_nt        = $(extra_c_flags_nt_$(host_CPU))
extra_c_flags_win       = -fpc-s-zc-zu-zw
extra_c_flags           = -DWIN_GUI

extra_c_flags_trmem     = $(OF) $(TRMEM)
extra_c_flags_trmemcvr  = $(OF) $(TRMEM)
extra_c_flags_wrsvexe   = -DWR_COMPILED
extra_c_flags_wrmem     = $(TRMEM)
extra_c_flags_wrmain    = -bd

!ifeq wr_trmem 1
TRMEM = -dTRMEM
!else
TRMEM =
!endif

wbind           = wbind
rc_opts_nt      = -bt=NT
rc_opts_win     = -bt=windows
rc_opts         = -q $(rc_opts_$(host_OS))

!ifeq host_OS nt
rc_opts         += -d__NT__
!else
#rc_opts        += -zm
!endif

.c:   c;$(wr_dir)\c;$(trmem_dir);$(wrc_dir)\c;$(misc_dir);$(cpp_dir)
.h:   h;$(wr_dir)\h;$(trmem_dir);$(wrc_dir)\h;$(misc_dir);$(cpp_dir)
.msg: $(wr_dir)\h;$(wrc_dir)\h
.rc : $(wr_dir)\h
.dlg : $(wr_dir)\h

inc_dirs = h;$(wr_dir)\h;$(misc_dir);$(wrc_dir)\h;$(trmem_dir);$(wres_dir)\h;
inc_dirs += $(cpp_dir);$(watcom_dir)\h

HOME__DIR       =$+ $(%cwd) $-

.BEFORE
        set INCLUDE=$(inc_path)
        cd $(wrc_dir)\o
        wmake -h -i rcmsg.h
        wmake -h -i ytab.obj
        cd $(HOME__DIR)

#------------- LIB
$(name).lib: wrcmsg.h $(name).dll
        $(librarian) -b-q-n $(name) +$]@

#------------- LINK
extra_l_flags = libpath $(misc_dir) op map,v,static
extra_l_flags_nt = op stack=32k,heap=16k commit heap=8k
!ifndef TOOLS_10_0
!ifeq host_CPU 386
#extra_l_flags_nt += runtime windows=4.0 option offset=69900000
extra_l_flags_nt += runtime windows=4.0
!endif
!endif
extra_l_flags_win = op rwr,stack=16k export WEP RESIDENT
#extra_l_flags_win += segment  _TEXT PRELOAD FIXED
#extra_l_flags_win += segment  CLASS 'CODE' LOADONCALL MOVEABLE DISCARDABLE
#extra_l_flags_win += segment  CLASS 'CODE' PRELOAD

$(name).dll: $(object) $(wres_lib) $(name).res
        *$(linker)  d a $(lflags) name $(name).dll lib $(wres_lib) file {$(object)}
        $(rc) $(rc_opts) -k $(name).res $(name).dll
!ifdef TOOLS_10_0
!ifeq host_OS nt
!ifeq host_CPU 386
        whack $(name).dll
!endif
!endif
!endif

#---------- TEST
test_system_win_i86= windows
test_system_nt_386 = nt_win
test_system_nt_axp = ntaxp_win
test_system = $(test_system_$(host_OS)_$(host_CPU))

test_lflags = system $(test_system) name test debug all libpath $(watcom_dir)\lib
test_lflags += option quiet, map, elim, v, static

test.exe: $(name).lib $(TESTLNK) test.obj
        *$(linker) $(test_lflags) library $(name) file test

test.obj: test.c

$(name).res: $(name).rc wrcmsg.h

$(name).rc: addsym.dlg editsym.dlg selft.dlg selimage.dlg memflags.dlg &
            addsym.h editsym.h selft.h selimage.h memflags.h
        @%null

.c.obj: .AUTODEPEND
        $(cc) $(cflags) $(extra_c_flags_$[&) -fhq $[@

wrsvexe.obj: .AUTODEPEND
        $(cc) $(cflags) $(extra_c_flags_$[&) $^&

.c.tbj: .AUTODEPEND
        $(cc) $(cflags) $(extra_c_flags_$[&) $(trmem_dir)\$^& -fo=$^&.tbj

.c.rbj: .AUTODEPEND
        *$(cc) $(cflags) $(extra_c_flags_$[&) -i=$(wrc_dir)\h -zm $(wrc_dir)\c\$^& -DWR_COMPILED -fo=$^&.rbj

.c.cbj: .AUTODEPEND
        $(cc) $(cflags) $(extra_c_flags_$[&)-zm $(cpp_dir)\$^& -fo=$^&.cbj

ldstr.mbj: .AUTODEPEND
        $(cc) $(cflags) -zm $(misc_dir)\$^& -DWR_NO_RCFPRINTF -fo=$^&.mbj

.c.mbj: .AUTODEPEND
        $(cc) $(cflags) $(extra_c_flags_$[&) -zm $(misc_dir)\$^& -fo=$^&.mbj

.rc.res:
        $(rc) $(rc_opts) -DWR_COMPILED -r -fo=.\$^&.res ..\h\$^&.rc

wrcmsg.h: wrtemp.h
        vi -q -i -s $(sdk_dir)\misc\msgtoh.vi -p"wrcmsg.h" wrtemp.h
#       copy tmp.h ..\h\wrcmsg.h

wrtemp.h: ..\h\master.msg rc.msg wr.msg
        $(cc) $(cflags) -p ..\h\master.msg > wrtemp.h

.c.$(CPPFILE):
        $(cc) $(cflags) -pc ..\c\$^& > $^&.$(CPPFILE)

.c.rpp:
        $(cc) $(cflags) $(RC__DIR)\c\$^& -DWR_COMPILED -pc > $^&.rpp

clean : .SYMBOLIC
        @-rm *.?bj
        @-rm *.lib
        @-rm *.dll
        @-rm *.map
        @-rm *.lnk
        @-rm *.res
        @-rm *.err
        @-rm *.pp
        @-rm *.h
        @-rm *.pch
        @-rm *.sym
