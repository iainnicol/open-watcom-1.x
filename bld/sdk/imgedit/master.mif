proj_name = wimgedit
name = wimgedit

!ifndef wimgedit_autodepends
wimgedit_autodepends = .AUTODEPEND
!endif

sys_windowed = 1

memory_model_i86 = l

!include cproj.mif
!include deftarg.mif
!include defrule.mif

.EXTENSIONS: .dlg .res .rc

WINDOWS=1
!include wres.mif

.JUST_ENOUGH

!ifeq host_OS os2
# OS/2 specific stuff here

resdir = $(wimgedit_dir)/objos2/res
rcdeps = $(resdir)/$(name).rc
resinc = -I"$(wimgedit_dir)/objos2/res"
objs =  imgedit.obj ieproc.obj ieclrpal.obj ieglob.obj pmcreate.obj &
        curclr.obj clrcntls.obj colours.obj imgdata.obj hinttext.obj &
        ienew.obj ieutil.obj drawproc.obj pmutils.obj xorand.obj &
        iedraw.obj ieviewin.obj trnsform.obj iesave.obj &
        mem.obj iestatus.obj iefonts.obj fill.obj freehand.obj &
        ieopen.obj wbitmap.obj ieprofil.obj settings.obj &
        getdata.obj clip.obj iconinfo.obj bkcolour.obj pmicon.obj undo.obj &
        ietoolbr.obj funcbar.obj chgsize.obj bits.obj wpi_mem.obj closeall.obj &
        errors.obj

.c : $(wimgedit_dir)/objos2/c;$(wimgedit_dir)/c
.h : $(wimgedit_dir)/objos2/h;$(wimgedit_dir)/h
.dlg : $(wimgedit_dir)/objos2/res;$(wimgedit_dir)/res

!else
# Other OS's specific stuff

objs =  imgedit.obj ieproc.obj ieglob.obj ieclrpal.obj ienew.obj &
        ieopen.obj iesave.obj ieviewin.obj iedraw.obj icon.obj &
        ietoolbr.obj &
        xorand.obj freehand.obj clip.obj drawproc.obj iestatus.obj &
        undo.obj snap.obj colours.obj iconinfo.obj ieutil.obj fill.obj &
        clrcntls.obj curclr.obj funcbar.obj modclrs.obj bkcolour.obj &
        imgdata.obj getdata.obj pickbmp.obj iefonts.obj chgsize.obj &
        settings.obj trnsform.obj hinttext.obj ieprofil.obj &
        wpi_mem.obj closeall.obj bits.obj errors.obj &
        iebmpdat.obj iedde.obj iemem.obj iectl3d.obj $(extras)

extras = wincreat.obj title.obj winutils.obj
.c : $(wimgedit_dir)/c
!endif

extra_c_flags = -DWIN_GUI -s -fh
!ifdef wpitest
extra_c_flags += -d_WPI_TEST_
!endif

extra_c_flags_win = -zc

libs = $(wres_lib) $(wpi_dir)/$(host_os)$(host_cpu)/wpi.lib
libs += $(commonui_dir)/$(host_os)$(host_cpu)/commonui.lib
!ifneq host_os os2
libs += $(wr_dir)/$(host_os)$(host_cpu)/wr.lib
!endif

extra_l_flags     = option map lib { $(libs) }

extra_l_flags_win = option rwr option stack=16k option heapsize=2k lib ddeml.lib
extra_l_flags_nt  = option stack=100k
!ifeq host_CPU 386
extra_l_flags_nt += alias '_WinMain'='_WinMain@16'
!endif
extra_l_flags_os2 = option stack=12k option heapsize=2k &
                    option symfile=$(name).sym

inc_dirs  = -Ih -I"$(wimgedit_dir)/h" -I"$(wres_dir)/h" -I"$(wr_dir)/h"
inc_dirs += -I"$(commonui_dir)/h" -I"$(commonui_dir)/$(host_os)$(host_cpu)"
inc_dirs += -I"$(misc_dir)" -I"$(wpi_dir)/h"

# systems where version resource must be added to .EXE
version_res_nt_386 = exever.res

!ifeq host_OS os2

$(name).exe : $(name).res $(objs) $(libs)
        %create $^&.lnk
        @%append $^&.lnk $(lflags)
        @%append $^&.lnk file { $(objs) }
        $(linker)  name $^@ @$^&.lnk
        $(rc) -k $^&.res $^@

$(name).res : $(wimgedit_dir)/objos2/res/$(name).rc $(rcdeps)
        $(rc) $(rc_flags) -DBMP_DIR=$(sdk_dir)/wimgedit/res &
        -DMISC_DIR=$(sdk_dir)/misc $(inc_path) $(resinc) $[@ $^@

!else

$(name).exe : $(name).res $(objs) $(libs) $(version_res_$(host_os)_$(host_cpu))
        %create $^&.lnk
        @%append $^&.lnk $(lflags)
        @%append $^&.lnk file { $(objs) }
        $(linker)  name $^@ @$^&.lnk
!ifdef version_res_$(host_os)_$(host_cpu)
        $(rc) -k $^&.res $^@ -fr=$(version_res_$(host_os)_$(host_cpu))
!else
        $(rc) -k $^&.res $^@
!endif

rcstr.gh : rcstrmsg.gh
        $(awk) -f $(misc_dir)/msgtoh.awk $[@ > $^@

rcstrmsg.gh : $(wimgedit_dir)/h/wimgedit.msg
        $(cc) $(preproc_opts) $(inc_path) -fo=$^@

$(name).res : ../res/$(name).rc rcstr.gh
        $(rc) $(rc_flags) -ad -zk0 -I"$(wimgedit_dir)/res" $(inc_path) $[@ -fo=$^@

!include verrc.mif

!endif
