proj_name = wrc
name = wrc

!ifndef wrc_autodepends
wrc_autodepends = .AUTODEPEND
!endif

!ifdef __LINUX__
nuldevice = /dev/null
!else
nuldevice = nul
!endif

!include cproj.mif
!include defrule.mif

#always use the most up to date wres library
!include wres.mif

.EXTENSIONS : .y .key .gh .res .rc

!ifndef on_build_machine
!ifeq host_os nt
!ifneq host_cpu axp
TRACK_MEM_OPTS = -dRCMEM_DEBUG
!else   # axp: -dRCMEM_DEBUG version is NOT working! Fix me!
!endif
!else
TRACK_MEM_OPTS = -dRC_USE_TRMEM -of+
WRC_USE_TRMEM = 1
!endif
!endif

splice_opts = -kDEBUG

objs =  ytab.obj &
        errors.obj errprt.obj exeobj.obj exeres.obj exerespe.obj &
        exeseg.obj exeutil.obj global.obj hash1.obj hash2.obj &
        keyword.obj layer0.obj param.obj pass2.obj rc.obj rcio.obj &
        rcmem.obj rcstr.obj ppalloc.obj scan.obj semaccel.obj &
        semantic.obj semdiag.obj semmenu.obj semver.obj semtbar.obj&
        semraw.obj semsingl.obj semstr.obj swchar.obj dbtable.obj &
        preproc.obj ppexpr.obj ppmacro.obj tmpctl.obj autodep.obj &
        rcldstr.obj rcalloc1.obj rcalloc0.obj sharedio.obj semresfl.obj &
        leadbyte.obj

!ifeq sys_dll 1
objs += rcdll.obj libmain.obj idemsgpr.obj
!endif

!ifndef on_build_machine
!ifeq WRC_USE_TRMEM 1
objs += trmem.obj
!endif
!endif

# cflags stuff
###############
extra_c_flags     = -dYYDEBUG -dSCANDEBUG
!ifeq host_os nt
extra_c_flags    += -dNT_HOSTED
!endif

!ifeq sys_dll 1
extra_c_flags    += -dDLL_COMPILE
!endif

extra_c_flags_i86 = -fpc
extra_c_flags_386 = -fpc

extra_c_flags_rcalloc0 = $(TRACK_MEM_OPTS)
extra_c_flags_rcalloc1 = $(TRACK_MEM_OPTS)
extra_c_flags_rcmem = $(TRACK_MEM_OPTS)

# lflags stuff
###############
extra_l_flags += libpath $(watcom_dir)/lib &
                lib $(WRES_LIB) option map

!ifeq sys_dll 1
!ifeq host_os nt
extra_l_flags += option offset=0x69800000
!endif
!endif

extra_l_flags_osi += option symfile

# where to look for various files
.c : .;$(wrc_dir)/c;$(cpp_dir);$(trmem_dir);$(watcom_dir)/c
.y : $(wrc_dir)/y
.key : $(wrc_dir)/hash
.h : $(wrc_dir)/h;$(trmem_dir)

inc_dirs = .;$(wrc_dir)/h;$(wres_dir)/h;$(watcom_dir)/h;$(cpp_dir);$(trmem_dir)

.before:
        @set include=$(inc_path)

# explicit rules

!ifeq sys_dll 1
$(name).dll : usage.rc usagej.rc rcmsg.gh $(objs) $(name).res $(WRES_LIB)
!else
$(name).exe : usage.rc usagej.rc rcmsg.gh $(objs) $(name).res $(WRES_LIB)
!endif
        $(linker) $(lflags) name $@ file { $(objs) }
        @%make bindit
!ifeq sys_dll 1
        wstrip -q -a -r $(name).dll . $(name).res
        @rm -f $(name).lib
        $(librarian) $(name).lib +$(name).dll
!else
        wstrip -q -a -r $(name).exe . $(name).res
!endif

bindit : .PROCEDURE
!ifeq host_os osi
        w32bind $(name).rex $(name).exe $(tools_root)\os2ldr.exe
        erase $(name).rex
        @%null
!else ifeq host_os dos
        # Decide on which standard extender to use first...
#!error NYI
        @%null
!else
        @%null
!endif

ytab.obj : ytab.c param.h ytab.gh
#!ifndef on_build_machine
#       $(CC) -nm=rc.y $(CFLAGS) $[*
#!else
        $(CC) $(CFLAGS) $[*
#!endif

ytab.c ytab.gh : rc.y $(wrc_dir)/y/yydriver.c rcmem.h
        $(yacc) -d -b $[@ $[:yydriver.c >$(nuldevice)
        @cp ytab.h ytab.gh
        @rm -f ytab.h

./findhash.exe: $(fe_misc_dir)/c/findhash.c
        $(bld_cl) $(wcl_util_opts) $<

weights1.gh keyword1.gh : rc1.key ./findhash.exe
        $]@ -q $[@
        @cp keywords.gh keyword1.gh
        @cp weights.gh weights1.gh
        @rm -f keywords.gh
        @rm -f weights.gh

weights2.gh keyword2.gh : rc2.key ./findhash.exe
        $]@ -q $[@
        @cp keywords.gh keyword2.gh
        @cp weights.gh weights2.gh
        @rm -f keywords.gh
        @rm -f weights.gh

$(name).res : ../rc.rc .AUTODEPEND
        $(rc) $(rc_flags) -r -ad $[@ -fo=$^@

rcmsg.gh : ../h/rc.msg
!ifdef __LINUX__
        perl $(sdk_dir)/misc/msgtoh.pl < $[@ > $^@
!else
        vi -d -q -i -s $(sdk_dir)/misc/msgtoh.vi -p"$^@" $[@
!endif

usage.rc : $(wrc_dir)/usage.sp
        wsplice -kENGLISH -kIS_RC -k$(host_os) $(splice_opts) -t8 -f "%+(MSG_USE_E_BASE+%$#-1), \"%s\"" ../usage.sp usage.rc

usagej.rc : $(wrc_dir)/usage.sp
        wsplice -kJAPANESE -kIS_RC -k$(host_os) $(splice_opts) -t8 -f "%+(MSG_USE_J_BASE+%$#-1), \"%s\"" ../usage.sp usagej.rc

hash1.obj : hash1.c weights1.gh .AUTODEPEND

hash2.obj : hash2.c weights2.gh .AUTODEPEND

clean: .SYMBOLIC .EXPLICIT
        rm -f *.?bj *.lnk *.exe *.dll *.lib *.map *.rc *.res
        rm -f *.sym *.tmp *.ilk *.lst *.err *.trk *.gh
        rm -f ytab.*
