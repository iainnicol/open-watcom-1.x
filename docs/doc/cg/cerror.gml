.* ***********************************************
.* DO NOT EDIT THIS FILE! THIS FILE IS GENERATED *
.* FROM CERRS.H IN THE C PROJECT.                *
.* ***********************************************
.*
.errsect Warning Level 1 Messages
.*
.ix 'diagnostics' 'warning'
.ix 'messages' 'warning'
.ix 'warning messages' 'level 1'
.errnote W100 Parameter %d contains inconsistent levels of indirection
.np
The function is expecting something like
.id char **
and it is being passed a
.id char *
for instance.

.errnote W101 Non-portable pointer conversion
.np
This message is issued whenever you convert a non-zero constant to a pointer.

.errnote W102 Type mismatch (warning)
.np
This message is issued for a function return value or an assignment where
both types are pointers, but they are pointers to different kinds of objects.

.errnote W103 Parameter count does not agree with previous definition (warning)
.np
You have either not enough parameters or too many parameters in a call
to a function.
If the function is supposed to have a variable number of parameters, then
you can ignore this warning, or you can change the function declaration
and prototypes to use the ",..." to indicate that the function indeed
takes a variable number of parameters.

.errnote W104 Inconsistent levels of indirection
.np
This occurs in an assignment or return statement when one of the operands
has more levels of indirection than the other operand.
For example, a
.id char **
is being assigned to a
.id char *.
.np
Solution: Correct the levels of indirection or use a
.id void *.

.errnote W105 Assignment found in boolean expression
.np
An assignment of a constant has been detected in a boolean expression.
For example: "if( var = 0 )".
It is most likely that you want to use "==" for testing for equality.

.errnote W106 Constant out of range - truncated
.np
This message is issued if a constant cannot be represented in 32 bits
or if a constant is outside the range of valid values
that can be assigned to a variable.

.errnote W107 Missing return value for function '%s'
.np
A function has been declared with a function return type, but no
.kw return
statement was found in the function.  Either add a
.kw return
statement or change the function return type to
.kw void.

.errnote W108 Duplicate typedef already defined
.np
A duplicate typedef is not allowed in ANSI C.
This warning is issued when compiling with extensions enabled.
You should delete the duplicate typedef definition.


.errnote W110 'fortran' pragma not defined
.np
You have used the
.kw fortran
keyword in your program, but have not defined a #pragma for
.kw fortran.

.errnote W111 Meaningless use of an expression
.np
The line contains an expression that does nothing useful.
In the example "i = (1,5);", the expression "1," is meaningless.
This message is also generated for a comparison that is useless.
Comparing an unsigned expression to see if it is >=, <, or <= to 0
is useless.
Check to see if the expression should be signed instead of unsigned.

.errnote W112 Pointer truncated
.np
A far pointer is being passed to a function that is expecting a near
pointer, or a far pointer is being assigned to a near pointer.

.errnote W113 Pointer type mismatch
.np
You have two pointers that either point to different objects, or the
pointers are of different size, or they have different modifiers.

.errnote W114 Missing semicolon
.np
You are missing the semicolon ";" on the field definition just before
the right curly brace "}".

.errnote W115 &array may not produce intended result
.np
The type of the expression "&array" is different from the type of the
expression "array".
Suppose we have the declaration
.id char buffer[80];
Then the expression
.id (&buffer + 3)
will be evaluated as
.id (buffer + 3 * sizeof(buffer))
which is
.id (buffer + 3 * 80)
and not
.id (buffer + 3 * 1)
which is what most people expect to happen.
The address of operator "&" is not required for getting the address of an
array.

.errnote W116 Attempt to return address of auto variable
.np
This warning usually indicates a serious programming error.
When a function exits, the storage allocated on the stack for
auto variables is released.
This storage will be overwritten by further function calls
and/or hardware interrupt service routines.
Therefore, the data pointed to by the return value may be destroyed
before your program has a chance to reference it or make a copy of it.

.errnote W117 '##' tokens did not generate a single token (rest discarded)
.np
When two tokens are pasted together using ##, they must form a string
that can be parsed as a single token.

.errnote W118 Label '%s' has been defined but not referenced
.np
You have defined a label that is not referenced in a
.kw goto
statement.
It is possible that you are missing the
.kw case
keyword when using an enumerated type name as a case in a
.kw switch
statement.
If not, then the label can be deleted.

.errnote W119 Address of static function '%s' has been taken
.np
This warning may indicate a potential problem when the program is overlayed.

.errnote W120 Using result of a cast operator as an lvalue is not standard C
.np
A cast operation does not yield an lvalue in ANSI standard C.
However, to provide compatibility with code written prior to the availability
of ANSI standard C compilers, if an expression was an lvalue prior to the
cast operation, and the cast operation does not cause any conversions, the
compiler treats the result as an lvalue and issues this warning.

.errnote W121 Text following pre-processor directives is not standard C
.np
Arbitrary text is not allowed following a pre-processor directive.
Only comments are allowed following a pre-processor directive.

.errnote W122 Literal string too long for array - truncated
.np
The supplied literal string contains more characters than the specified
dimension of the array.
Either shorten the literal string, or increase the dimension of the array
to hold all of the characters from the literal string.

.errnote W123 '//' style comment continues on next line
.np
The compiler has detected a line continuation during the processing
of a C++ style comment ("//").  The warning can be removed by switching to
a C style comment ("/**/").  If you require the comment to be terminated
at the end of the line, make sure that the backslash character is not
the last character in the line.
.exam begin
#define XX 23 // comment start \
comment \
end

int x = XX; // comment start ...\
comment end
.exam end

.eerrsect
.*
.errsect Warning Level 2 Messages
.*
.ix 'diagnostics' 'warning'
.ix 'messages' 'warning'
.ix 'warning messages' 'level 2'
.errnote W200 '%s' has been referenced but never assigned a value
.np
You have used the variable in an expression without previously assigning
a value to that variable.

.errnote W201 Unreachable code
.np
The statement will never be executed, because there is no path through
the program that causes control to reach this statement.

.errnote W202 Symbol '%s' has been defined, but not referenced
.np
There are no references to the declared variable.
The declaration for the variable can be deleted.
If the variable is a parameter to a function, all calls to the function
must also have the value for that parameter deleted.
.np
In some cases, there may be a valid reason for retaining the variable.
You can prevent the message from being issued through use of
.us #pragma off(unreferenced).

.errnote W203 Preprocessing symbol '%s' has not been declared
.np
The symbol has been used in a preprocessor expression.
The compiler assumes the symbol has a value of 0 and continues.
A
.id #define
may be required for the symbol, or you may have forgotten
to include the file which contains a
.id #define
for the symbol.

.eerrsect
.*
.errsect Warning Level 3 Messages
.*
.ix 'diagnostics' 'warning'
.ix 'messages' 'warning'
.ix 'warning messages' 'level 3'
.errnote W300 Nested comment found in comment started on line %u
.np
While scanning a comment for its end, the compiler detected
.id /*
for the start of another comment.
Nested comments are not allowed in ANSI C.
You may be missing the
.id */
for the previous comment.

.errnote W301 No prototype found for '%s'
.np
A reference for a function appears in your program, but you do not
have a prototype for that function defined.

.errnote W302 Expression is only useful for its side effects
.np
You have an expression that would have generated the warning
"Meaningless use of an expression", except that it also contains
a side-effect, such as ++, &minus.&minus., or a function call.

.eerrsect
.*
.errsect Error Messages
.*
.ix 'diagnostics' 'error'
.ix 'messages' 'error'
.ix 'error messages'
.errnote E1000 BREAK must appear in while, do, for or switch statement
.np
A
.kw break
statement has been found in an illegal place in the program.
You may be missing an opening brace
.id {
for a
.kw while,
.kw do,
.kw for
or
.kw switch
statement.

.errnote E1001 CASE must appear in switch statement
.np
A
.kw case
label has been found that is not inside a
.kw switch
statement.

.errnote E1002 CONTINUE must appear in while, do or for statement
.np
The
.kw continue
statement must be inside a
.kw while,
.kw do
or
.kw for
statement.
You may have too many
.id }
between the
.kw while,
.kw do
or
.kw for
statement and the
.kw continue
statement.

.errnote E1003 DEFAULT must appear in switch statement
.np
A
.kw default
label has been found that is not inside a
.kw switch
statement.
You may have too many
.id }
between the start of the
.kw switch
and the
.kw default
label.

.errnote E1004 Misplaced '}' or missing earlier '{'
.np
An extra
.id }
has been found which cannot be matched up with an earlier
.id {.

.errnote E1005 Misplaced #elif directive
.np
The
.id #elif
directive must be inside an
.id #if
preprocessing group and before the
.id #else
directive if present.

.errnote E1006 Misplaced #else directive
.np
The
.id #else
directive must be inside an
.id #if
preprocessing group and follow all
.id #elif
directives if present.

.errnote E1007 Misplaced #endif directive
.np
A
.id #endif
preprocessing directive has been found without a matching
.id #if
directive.
You either have an extra
.id #endif
or you are missing an
.id #if
directive earlier in the file.

.errnote E1008 Only 1 DEFAULT per switch allowed
.np
You cannot have more than one
.kw default
label in a
.kw switch
statement.

.errnote E1009 Expecting '%s' but found '%s'
.np
A syntax error has been detected.
The tokens displayed in the message should help you to determine the problem.

.errnote E1010 Type mismatch
.np
For pointer subtraction, both pointers must point to the same type.
For other operators, both expressions must be assignment compatible.

.errnote E1011 Symbol '%s' has not been declared
.np
The compiler has found a symbol which has not been previously declared.
The symbol may be spelled differently than the declaration, or you may
need to
.id #include
a header file that contains the declaration.

.errnote E1012 Expression is not a function
.np
The compiler has found an expression that looks like a function call, but
it is not defined as a function.

.errnote E1013 Constant variable cannot be modified
.np
An expression or statement has been found which modifies a variable which
has been declared with the
.kw const
keyword.

.errnote E1014 Left operand must be an 'lvalue'
.np
The operand on the left side of an "=" sign must be a variable or memory
location which can have a value assigned to it.

.errnote E1015 '%s' is already defined as a variable
.np
You are trying to declare a function with the same name as a previously
declared variable.

.errnote E1016 Expecting identifier
.np
The token following "->" and "." operators must be the name of an
identifier which appears in the struct or union identified by the
operand preceding the "->" and "." operators.

.errnote E1017 Label '%s' already defined
.np
All labels within a function must be unique.

.errnote E1018 Label '%s' not defined in function
.np
A
.kw goto
statement has referenced a label that is not defined in the function.
Add the necessary label or check the spelling of the label(s) in the function.

.errnote E1019 Tag '%s' already defined
.np
All
.kw struct,
.kw union
and
.kw enum
tag names must be unique.

.errnote E1020 Dimension cannot be 0 or negative
.np
The dimension of an array must be positive and non-zero.

.errnote E1021 Dimensions of multi-dimension array must be specified
.np
All dimensions of a multiple dimension array must be specified.
The only exception is the first dimension which can declared as "[]".

.errnote E1022 Missing or misspelled data type near '%s'
.np
The compiler has found an identifier that is not a predefined type or the
name of a "typedef".
Check the identifier for a spelling mistake.

.errnote E1023 Storage class of parameter must be register or unspecified
.np
The only storage class allowed for a parameter declaration is
.kw register.

.errnote E1024 Declared symbol '%s' is not in parameter list
.np
Make sure that all the identifiers in the parameter list match those
provided in the declarations between the start of the function and the
opening brace "{".

.errnote E1025 Parameter '%s' already declared
.np
A declaration for the specified parameter has already been processed.

.errnote E1026 Invalid declarator
.np
A syntax error has occurred while parsing a declaration.

.errnote E1027 Invalid storage class for function
.np
If a storage class is given for a function, it must be
.kw static
or
.kw extern.

.errnote E1028 Variable '%s' cannot be void
.np
You cannot declare a
.kw void
variable.

.errnote E1029 Expression must be 'pointer to ...'
.np
An attempt has been made to de-reference (*) a variable or expression which
is not declared to be a pointer.

.errnote E1030 Cannot take the address of an rvalue
.np
You can only take the address of a variable or memory location.

.errnote E1031 Name '%s' not found in struct/union %s
.np
The specified identifier is not one of the fields declared in the
.kw struct
or
.kw union.
Check that the field name is spelled correctly, or that you are pointing
to the correct
.kw struct
or
.kw union.

.errnote E1032 Expression for '.' must be a 'structure' or 'union'
.np
The compiler has encountered the pattern "expression" "." "field_name"
where the expression is not a
.kw struct
or
.kw union
type.

.errnote E1033 Expression for '->' must be 'pointer to struct or union'
.np
The compiler has encountered the pattern "expression" "->" "field_name"
where the expression is not a pointer to
.kw struct
or
.kw union
type.

.errnote E1034 Symbol '%s' already defined
.np
The specified symbol has already been defined.

.errnote E1035 static function '%s' has not been defined
.np
A prototype has been found for a
.kw static
function, but a definition for the
.kw static
function has not been found in the file.

.errnote E1036 Right operand of '%s' is a pointer
.np
The right operand of "+=" and "&minus.=" cannot be a pointer.
The right operand of "&minus." cannot be a pointer unless the left
operand is also a pointer.

.errnote E1037 Type cast must be a scalar type
.np
You cannot type cast an expression to be a
.kw struct,
.kw union,
array or function.

.errnote E1038 Expecting label for goto statement
.np
The
.kw goto
statement requires the name of a label.

.errnote E1039 Duplicate case value '%s' found
.np
Every case value in a
.kw switch
statement must be unique.

.errnote E1040 Field width too large
.np
The maximum field width allowed is 16 bits.

.errnote E1041 Field width of 0 with symbol not allowed
.np
A bit field must be at least one bit in size.

.errnote E1042 Field width must be positive
.np
You cannot have a negative field width.

.errnote E1043 Invalid type specified for bit field
.np
The types allowed for bit fields are
.kw signed
or
.kw unsigned
varieties of
.kw char,
.kw short
and
.kw int.

.errnote E1044 Variable '%s' has incomplete type
.np
A full definition of a
.kw struct
or
.kw union
has not been given.

.errnote E1045 Subscript on non-array
.np
One of the operands of "[]" must be an array.

.errnote E1046 Incomplete comment
.np
The compiler did not find
.id */
to mark the end of a comment.

.errnote E1047 Argument for # must be a macro parm
.np
The argument for the stringize operator "#" must be a macro parameter.

.errnote E1048 Unknown preprocessing directive '#%s'
.np
An unrecognized preprocessing directive has been encountered.
Check for correct spelling.

.errnote E1049 Invalid #include directive
.np
A syntax error has been encountered in a
.id #include
directive.

.errnote E1050 Not enough parameters given for macro '%s'
.np
You have not supplied enough parameters to the specified macro.

.errnote E1051 Not expecting a return value for function '%s'
.np
The specified function is declared as a
.kw void
function.
Delete the
.kw return
statement, or change the type of the function.

.errnote E1052 Expression has void type
.np
You tried to use the value of a
.kw void
expression inside another expression.

.errnote E1053 Cannot take the address of a bit field
.np
The smallest addressable unit is a byte.
You cannot take the address of a bit field.

.errnote E1054 Expression must be constant
.np
The compiler expects a constant expression.
This message can occur during static initialization if you are
trying to initialize a non-pointer type with an address expression.

.errnote E1055 Unable to open '%s'
.np
The file specified in an
.id #include
directive could not be located.
Make sure that the file name is spelled correctly, or that the
appropriate path for the file is included in the list of paths
specified in the
.id &incvarup
environment variable or the "i=" option on the command line.

.errnote E1056 Too many parameters given for macro '%s'
.np
You have supplied too many parameters for the specified macro.

.errnote E1057 Modifiers disagree with previous definition of '%s'
.np
You have more than one definition or prototype for the variable or
function which have different type modifiers.

.errnote E1058 Cannot use typedef '%s' as a variable
.np
The name of a typedef has been found when an operand or operator is expected.
If you are trying to use a type cast, make sure there are parentheses
around the type, otherwise check for a spelling mistake.

.errnote E1059 Invalid storage class for non-local variable
.np
A variable with module scope cannot be defined with the storage class of
.kw auto
or
.kw register.

.errnote E1060 Invalid type
.np
An invalid combination of the following keywords has been specified in a
type declaration:
.kw const,
.kw volatile,
.kw signed,
.kw unsigned,
.kw char,
.kw int,
.kw short,
.kw long,
.kw float
and
.kw double.

.errnote E1061 Expecting data or function declaration, but found '%s'
.np
The compiler is expecting the start of a data or function declaration.
If you are only part way through a function, then you have too many
closing braces "}".

.errnote E1062 Inconsistent return type for function '%s'
.np
Two prototypes for the same function disagree.

.errnote E1063 Missing operand
.np
An operand is required in the expression being parsed.

.errnote E1064 Out of memory
.np
The compiler has run out of memory to store information about the file
being compiled.
Try reducing the number of data declarations and or the size of the file
being compiled.
Do not
.id #include
header files that are not required.
.np
For the 16-bit WATCOM C compiler,
the "/d2" switch causes the compiler to use more memory.
Try compiling with the "/d1" switch instead.

.errnote E1065 Invalid character constant
.np
This message is issued for an improperly formed character constant.

.errnote E1066 Cannot perform operation with pointer to void
.np
You cannot use a "pointer to void" with the operators +, &minus., ++,
&minus.&minus., += and &minus.=.

.errnote E1067 Cannot take address of variable with storage class 'register'
.np
If you want to take the address of a local variable, change the storage
class from
.kw register
to
.kw auto.

.errnote E1068 Variable '%s' already initialized
.np
The specified variable has already been statically initialized.

.errnote E1069 Ending " missing for string literal
.np
The compiler did not find a second double quote to end the string literal.

.errnote E1070 Data for aggregate type must be enclosed in curly braces
.np
When an array, struct or union is statically initialized, the data
must be enclosed in curly braces {}.

.errnote E1071 Type of parameter %d does not agree with previous definition
.np
The type of the specified parameter is incompatible with the prototype
for that function.
The following example illustrates a problem that can arise when the
sequence of declarations is in the wrong order.
.exam begin
/* Uncommenting the following line will
   eliminate the error */
/* struct foo; */

void fn1( struct foo * );

struct foo {
    int     a,b;
};

void fn1( struct foo *bar )
{
    fn2( bar );
}
.exam end
.pc
The problem can be corrected by reordering the sequence in which items
are declared (by moving the description of the structure
.id foo
ahead of its first reference or by adding the indicated statement).
This will assure that the first instance of structure
.id foo
is defined at the proper outer scope.

.errnote E1072 Storage class disagrees with previous definition of '%s'
.np
The previous definition of the specified variable has a storage class of
.kw static.
The current definition must have a storage class of
.kw static
or
.kw extern.

.errnote E1073 Invalid option '%s'
.np
The specified option is not recognized by the compiler.

.errnote E1074 Invalid optimization option '%s'
.np
The specified option is an unrecognized optimization option.

.errnote E1075 Invalid memory model '%s'
.np
Memory model option must be one of "ms", "mm", "mc", "ml", "mh" or
"mf" which selects the Small, Medium, Compact, Large, Huge or Flat
memory model.

.errnote E1076 Missing semicolon at end of declaration
.np
You are missing a semicolon ";" on the declaration just before the left
curly brace "{".

.errnote E1077 Missing '}'
.np
The compiler detected end of file before finding a right curly brace "}" to
end the current function.

.errnote E1078 Invalid type for switch expression
.np
The type of a switch expression must be integral.

.errnote E1079 Expression must be integral
.np
An integral expression is required.

.errnote E1080 Expression must be arithmetic
.np
Both operands of the "*", "/" and "%" operators must be arithmetic.
The operand of the unary minus must also be arithmetic.

.errnote E1081 Expression must be scalar type
.np
A scalar expression is required.

.errnote E1082 Statement required after label
.np
The C language definition requires a statement following a label.
You can use a null statement which consists of just a semicolon (";").

.errnote E1083 Statement required after 'do'
.np
A statement is required between the
.kw do
and
.kw while
keywords.

.errnote E1084 Statement required after 'case'
.np
The C language definition requires a statement following a
.kw case
label.
You can use a null statement which consists of just a semicolon (";").

.errnote E1085 Statement required after 'default'
.np
The C language definition requires a statement following a
.kw default
label.
You can use a null statement which consists of just a semicolon (";").

.errnote E1086 Expression too complicated, split it up and try again
.np
The expression contains too many levels of nested parentheses.
Divide the expression up into two or more sub-expressions.

.errnote E1087 Missing matching #endif directive
.np
You are missing a
.id #endif
to terminate a
.id #if, #ifdef
or
.id #ifndef
preprocessing directive.

.errnote E1088 Invalid macro definition, missing )
.np
The right parenthesis ")" is required for a function-like macro definition.

.errnote E1089 Missing ) for expansion of '%s' macro
.np
The compiler encountered end-of-file while collecting up the argument for a
function-like macro.
A right parenthesis ")" is required to mark the end of the argument(s) for
a function-like macro.

.errnote E1090 Invalid conversion
.np
A
.kw struct
or
.kw union
cannot be converted to anything.
A
.kw float
or
.kw double
cannot be converted to a pointer and a pointer cannot be converted to a
.kw float
or
.kw double.

.errnote E1091 %s
.np
This is a user message generated with the
.id #error
preprocessing directive.

.errnote E1092 Cannot define an array of functions
.np
You can have an array of pointers to functions, but not an array
of functions.

.errnote E1093 Function cannot return an array
.np
A function cannot return an array.
You can return a pointer to an array.

.errnote E1094 Function cannot return a function
.np
You cannot return a function.
You can return a pointer to a function.

.errnote E1095 Cannot take address of local variable in static initialization
.np
You cannot take the address of an
.kw auto
variable at compile time.

.errnote E1096 Inconsistent use of return statements
.np
The compiler has found a
.kw return
statement which returns a value and a
.kw return
statement that does not return a value both in the same function.
The
.kw return
statement which does not return a value needs to have a
value specified to be consistent with the other
.kw return
statement in the function.

.errnote E1097 Missing ? or misplaced :
.np
The compiler has detected a syntax error related to the "?" and ":"
operators.
You may need parenthesis around the expressions involved so that it can
be parsed correctly.

.errnote E1098 Maximum struct or union size is 64K
.np
The size of a
.kw struct
or
.kw union
is limited to 64K so that the compiler
can represent the offset of a member in a 16-bit register.

.errnote E1099 Statement must be inside function. Probable cause: missing {
.np
The compiler has detected a statement such as
.kw for,
.kw while,
.kw switch,
etc., which must be inside a function.
You either have too many closing braces "}" or you are missing an
opening brace "{" earlier in the function.

.errnote E1100 Definition of macro '%s' not identical to previous definition
.np
If a macro is defined more than once, the definitions must be identical.
If you want to redefine a macro to have a different definition, you must
.id #undef
it before you can define it with a new definition.

.errnote E1101 Cannot #undef __LINE__, __FILE__, __DATE__, __TIME__, __STDC__ or 'defined'
.np
The special macros
.id __LINE__, __FILE__, __DATE__, __TIME__,
and
.id __STDC__,
and the identifier "defined",
cannot be deleted by the
.id #undef
directive.

.errnote E1102 Cannot #define the name 'defined'
.np
You cannot define a macro called
.id defined.

.errnote E1103 ## must not be at start or end of replacement tokens
.np
There must be a token on each side of the "##" (token pasting) operator.

.errnote E1104 Type cast not allowed in #if or #elif expression
.np
A type cast is not allowed in a preprocessor expression.

.errnote E1105 'sizeof' not allowed in #if or #elif expression
.np
The
.kw sizeof
operator is not allowed in a preprocessor expression.

.errnote E1106 Cannot compare a struct or union
.np
A
.kw struct
or
.kw union
cannot be compared with "==" or "!=".
You must compare each member of a
.kw struct
or
.kw union
to determine equality or inequality.
If the
.kw struct
or
.kw union
is packed (has no holes in it for alignment purposes)
then you can compare two structs using
.id memcmp.

.errnote E1107 Enumerator list cannot be empty
.np
You must have at least one identifier in an
.kw enum
list.

.errnote E1108 Invalid floating-point constant
.np
The exponent part of the floating-point constant is not formed correctly.

.errnote E1109 Cannot take sizeof a bit field
.np
The smallest object that you can ask for the size of is a char.

.errnote E1110 Cannot initialize variable with storage class of extern
.np
A storage class of
.kw extern
is used to associate the variable with its actual definition somewhere
else in the program.

.errnote E1111 Invalid storage class for parameter
.np
The only storage class allowed for a parameter is
.kw register.

.errnote E1112 Initializer list cannot be empty
.np
An initializer list must have at least one item specified.

.errnote E1113 Expression has incomplete type
.np
An attempt has been made to access a struct or union whose definition is
not known, or an array whose dimensions are not known.

.errnote E1114 Struct or union cannot contain itself
.np
You cannot have a
.kw struct
or
.kw union
contain itself.
You can have a pointer in the
.kw struct
which points to an instance of itself.
Check for a missing "*" in the declaration.

.errnote E1115 Incomplete enum declaration
.np
The enumeration tag has not been previously defined.

.errnote E1116 An id list not allowed except for function definition
.np
A function prototype must contain type information.

.errnote E1117 Must use 'va_start' macro inside function with variable parameters
.np
The
.id va_start
macro is used to setup access to the parameters in a function
that takes a variable number of parameters.
A function is defined with a variable number of parameters by declaring
the last parameter in the function as "...".

.errnote E1118 ***FATAL*** %s
.np
A fatal error has been detected during code generation time.
The type of error is displayed in the message.

.errnote E1119 Internal compiler error %d
.np
A bug has been encountered in the WATCOM C compiler.
Please report the specified internal compiler error number and any other
helpful details about the program being compiled to WATCOM so that we
can fix the problem.

.errnote E1120 Parameter number %d - invalid register in #pragma
.np
The designated registers cannot hold the value for the parameter.

.errnote E1121 Procedure '%s' has invalid return register in #pragma
.np
The size of the return register does not match the size of the result
returned by the function.

.errnote E1122 Illegal register modified by '%s' #pragma
.np
.us For the 16-bit WATCOM C compiler:
The BP, CS, DS, and SS registers cannot be modified in small data models.
The BP, CS, and SS registers cannot be modified in large data models.
.np
.us For the 32-bit WATCOM C compiler:
The EBP, CS, DS, ES, and SS registers cannot be modified in flat
memory models.
The EBP, CS, DS, and SS registers cannot be modified in small data
models.
The EBP, CS, and SS registers cannot be modified in large data models.

.errnote E1123 File must contain at least one external definition
.np
Every file must contain at least one global object, (either a data variable
or a function).
This message is only issued in strict ANSI mode (-za).

.errnote E1124 Out of macro space
.np
The compiler ran out of memory for storing macro definitions.

.errnote E1125 Keyboard interrupt detected
.np
The compile has been aborted with Ctrl/C or Ctrl/Break.

.errnote E1126 Array, struct or union cannot be placed in a register
.np
Only scalar objects can be specified with the
.kw register
class.

.errnote E1127 Type required in parameter list
.np
If the first parameter in a function definition or prototype is defined
with a type, then all of the parameters must have a type specified.

.errnote E1128 Enum constant too large
.np
All of the constants must fit in either an
.kw int
or
.kw unsigned.

.errnote E1129 Type does not agree with previous definition of '%s'
.np
You have more than one definition of a variable or function that do not
agree.

.errnote E1130 Duplicate name '%s' not allowed in struct or union
.np
All the field names in a
.kw struct
or
.kw union
must be unique.

.errnote E1131 Duplicate macro parameter '%s'
.np
The parameters specified in a macro definition must be unique.

.errnote E1132 Unable to open work file: error code = %d
.np
The compiler tries to open a new work file by the name "__wrkN__.tmp" where
N is the digit 0 to 9.
This message will be issued if all of those files already exist.

.errnote E1133 Write error on work file: error code = %d
.np
An error was encountered trying to write information to the work file.
The disk could be full.

.errnote E1134 Read error on work file: error code = %d
.np
An error was encountered trying to read information from the work file.

.errnote E1135 Seek error on work file: error code = %d
.np
An error was encountered trying to seek to a position in the work file.

.errnote E1136 Token too long - truncated
.np
The token must be less than 510 bytes in length.

.errnote E1137 Out of enum space
.np
The compiler has run out of space allocated to store information on all
of the
.kw enum
constants defined in your program.

.errnote E1138 Filename required on command line
.np
The name of a file to be compiled must be specified on the command line.

.errnote E1139 Command line contains more than one file to compile
.np
You have more than one file name specified on the command line to be
compiled.
The compiler can only compile one file at a time.
You can use the &wclname. utility to compile multiple files with a
single command.

.errnote E1140 _leave must appear in a _try statement
.np
The
.kw _leave
keyword must be inside a
.kw _try
statement.
The
.kw _leave
keyword causes the program to jump to the start of the
.kw _finally
block.

.errnote E1141 Expecting end of line but found '%s'
.np
A syntax error has been detected.
The token displayed in the message should help you determine the problem.

.errnote E1142 Too many bytes specified in #pragma
.np
There is an internal limit on the number of bytes for in-line code
that can be specified with a pragma.
Try splitting the function into two or more smaller functions.

.errnote E1143 Cannot resolve linkage conventions for routine '%s' #pragma
.np
The compiler cannot generate correct code for the specified routine
because of register conflicts.
Change the registers used by the parameters of the pragma.

.errnote E1144 Symbol '%s' in pragma must be global
.np
The in-line code for a pragma can only reference a global variable or
function.
You can only reference a parameter or local variable by passing it as
a parameter to the in-line code pragma.

.errnote E1145 Internal compiler limit exceeded, break module into smaller pieces
.np
The compiler can handle 65535 quadruples, 65535 leaves, and 65535 symbol
table entries and literal strings.
If you exceed one of these limits, the program must be broken into smaller
pieces until it is capable of being processed by the compiler.

.errnote E1146 Invalid initializer for integer data type
.np
Integer data types (int and long) can be initialized with
numeric expressions or address expressions that are the same size
as the integer data type being initialized.

.errnote E1147 Too many errors: compilation aborted
.np
The compiler stops compiling when the number of errors generated
exceeds the error limit.
The error limit can be set with the "-e" option.
The default error limit is 20.

.errnote E1148 Expecting identifier but found '%s'
.np
A syntax error has been detected.
The token displayed in the message should help you determine the problem.

.errnote E1149 Expecting constant but found '%s'
.np
The #line directive must be followed by a constant indicating the
desired line number.

.errnote E1150 Expecting "filename" but found '%s'
.np
The second argument of the #line directive must be a filename
enclosed in quotes.

.errnote E1151 Parameter count does not agree with previous definition
.np
You have either not enough parameters or too many parameters in a call
to a function.
If the function is supposed to have a variable number of parameters, then
you are missing the ", ..." in the function prototype.

.errnote E1152 Segment name required
.np
A segment name must be supplied in the form of a literal string
to the __segname() directive.

.errnote E1153 Invalid __based declaration
.np
The compiler could not recognize one of the allowable forms of __based
declarations.
See the
.us WATCOM C Language Reference
for description of all the allowable forms of __based declarations.

.errnote E1154 Variable for __based declaration must be of type __segment
.np
A based pointer declaration must be based on a simple variable of type
__segment.

.errnote E1155 Duplicate external symbol %s
.np
Duplicate external symbols will exist when the specified symbol name is
truncated to 8 characters.

.errnote E1156 Assembler error: '%s'
.np
An error has been detected by the in-line assembler.
The message indicates the error detected.

.errnote E1157 Variable must be 'huge'
.np
A variable or an array that requires more than 64K of storage in the 16-bit
compiler must be declared as
.kw huge.

.errnote E1158 Too many parm sets
.np
Too many parameter register sets have been specified in the pragma.

.errnote E1159 I/O error reading '%s': %s
.np
An I/O error has been detected by the compiler while reading the source file.
The system dependent reason is also displayed in the message.

.errnote E1160 Attempt to access far memory with all segment registers disabled in '%s'
.np
The compiler does not have any segment registers available to access the
desired far memory location.

.errnote E1161 No identifier provided for /D option
.np
The command line option /D must be followed by the name of the macro
to be defined.

.errnote E1162 Invalid register pegged to a segment in '%s'
.np
The register specified in a #pragma data_seg, or a
.kw __segname
expression must be a valid segment register.

.errnote E1163 Invalid octal constant
.np
An octal constant cannot contain the digits 8 or 9.

.errnote E1164 Invalid hexadecimal constant
.np
The token sequence "0x" must be followed by a hexadecimal character
(0-9, a-f, or A-F).

.errnote E1165 Unexpected ')'. Probable cause: missing '('
.np
A closing parenthesis was found in an expression without a corresponding
opening parenthesis.

.errnote E1166 Symbol '%s' is unreachable from #pragma
.np
The in-line assembler found a jump instruction to a label that is
too far away.

.errnote E1167 Division or remainder by zero in a constant expression
.np
The compiler found a constant expression containing a division or
remainder by zero.

.errnote E1168 Cannot end string literal with backslash
.np
The argument to a macro that uses the stringize operator '#'
on that argument must not end in a backslash character.
.exam begin
#define str(x) #x
str(@#\)
.exam end

.errnote E1169 Invalid __declspec declaration
.np
The only valid __declspec declarations are "__declspec(dllexport)"
and "__declspec(dllimport)".

.errnote E1170 Too many storage class specifiers
.np
You can only specify one storage class specifier in a declaration.

.errnote E1171 Expecting '%s' but found end of file
.np
A syntax error has been detected.
The compiler is still expecting more input when it reached the
end of the source program.

.errnote E1172 Expecting struct/union tag but found '%s'
.np
The compiler expected to find an identifier following the
.kw struct
or
.kw union
keyword.

.errnote E1173 Operand of __builtin_isfloat() must be a type
.np
The __builtin_isfloat() function is used by the
.kw va_arg
macro to determine if a type is a floating-point type.

.eerrsect
.*
.errsect Informational Messages
.*
.ix 'diagnostics' 'informational'
.ix 'messages' 'informational'
.errnote I2000 Not enough memory to fully optimize procedure '%s'
.np
The compiler did not have enough memory to fully optimize the
specified procedure.
The code generated will still be correct and execute properly.
This message is purely informational.

.errnote I2001 Not enough memory to maintain full peephole
.np
This message is similar to message I2000.
Certain optimizations benefit from being able to store the entire module
in memory during optimization.
All functions will be individually optimized but the optimizer will
not be able to share code between functions if this message appears.
The code generated will still be correct and execute properly.
This message is purely informational.
It is only printed if the warning level is greater than or equal to 4.
.np
The main reason for this message is for those people who are concerned
about reproducing the exact same object code when the same source file
is compiled on a different machine.
You may not be able to reproduce the exact same object code from one
compile to the next unless the available memory is exactly the same.

.eerrsect
