$# just in case anyone is curious ...
!ifdef %WCL386
!    error WCL386 environment variable must not be set
!endif
!ifdef %WCL
!    error WCL environment variable must not be set
!endif
!ifdef %WCC
!    error WCC environment variable must not be set
!endif
!ifdef %WCC386
!    error WCC386 environment variable must not be set
!endif
!ifdef %OPTASM
!    error OPTASM environment variable must not be set
!endif
!ifdef %TESTMODE
!    error You're building in test mode fool!
!endif

# don't ask, just nuke the files
.ERASE
.CONTINUE
.JUST_ENOUGH

# if you wish to have on_build_machine defined in your environment, set
# it as an environment variable.
!ifdef %on_build_machine
on_build_machine = $(%on_build_machine)
!endif
tools_root  = $(%TOOLDR)\tools
os2_toolkit     = $(%os2tkroot)
os2_ddk         = $(%os2ddkroot)

# if you wish to use the OS/2 Toolkit headers/libraries, set the environment
# variable; default is OS/2 headers/libraries in the Watcom tree
!ifdef %use_os2tk_stuff
use_os2tk_hdrs = $(%use_os2tk_stuff)
use_os2tk_libs = $(%use_os2tk_stuff)
!endif

nlang_root      = $(%dwatcom)
build_root      = $(%devdir)
online_dir      = $(%devdir)\online
utils_root      = $(build_root)
# a good enough location for any OS specific support files that may be needed.
os_supp_dir     = $(build_root)\os_supp

# The NOVELLNDK environment variable should be added during install. If not, the default location is
# C:\NOVELL\NDK\NWSDK.
nwndk_root      = $(%NOVELLNDK)
ow_nwoss_root   = $(os_supp_dir)\novell

# define compilers
comp286=*wcc
#
# use these to override compilers if necessary
#
!ifdef %BWCC
comp286 += @BWCC
!endif

!ifdef msc
comp386=$(msvc_dir)\bin\cl
!else
comp386=*wcc386
!ifdef %BWCC386
comp386 += @BWCC386
!endif
!endif

compaxp = $(nlang_root)\binnt\wccaxp
!ifdef %BWCCAXP
compaxp += @BWCCAXP
!endif

#
# compilers used for libraries
#
libcomp286=$(comp286) /r/fpr

!ifdef msc
libcomp386=$(comp386)
!else
libcomp386=$(comp386) /r/fpr
!endif

libcompaxp=$(compaxp)

#
# compilers used for install
#
inscomp286=$(%relroot)\rel2\binw\wcc /r/fpr

!ifdef msc
inscomp386=$(comp386)
!else
inscomp386=$(%relroot)\rel2\binw\wcc386 /r/fpr
!endif

#
# C++ stuff
#
# do not use '*' prefix because C++ MAKEFILEs already compact the cmdline
# do not use /r or /r7/fpr because C++ has no existing customer base

newlibcomp286=wcc
comp286plus=wpp

!ifdef msc
newlibcomp386=$(msvc_dir)\bin\cl
comp386plus=$(msvc_dir)\bin\cl
!else
newlibcomp386=wcc386
comp386plus=wpp386
!endif

libcomp286plus=$(build_root)\plusplus\bin\rppi8612.exe
libcomp386plus=$(build_root)\plusplus\bin\rpp38612.exe
libcompaxpplus=$(build_root)\plusplus\bin\rppaxp12.exe
libaxp=$(nlang_root)\binnt\wlibaxp.exe


# define library utility

!ifdef msc
lib=$(msvc_dir)\bin\lib /MACHINE:IX86 /NOLOGO
!else
lib=*wlib
!endif


# define linker

!ifdef msc
linker=$(msvc_dir)\bin\link /MACHINE:IX86 /NOLOGO
!else
linker=*wlink
!endif


# define assemblers

asm386=386asm
asm286=optasm
wasm=wasm


# define resource compilers

!ifdef msc
rc = $(msdev_dir)\bin\rc
!else
rc = rc
!endif

wrc = wrc
wrce = wrc /zk
wrck = wrc /zk

# define resource converter

!ifdef msc
cvtres = $(msvc_dir)\bin\cvtres /MACHINE:IX86 /NOLOGO
!else
cvtres = rem
!endif

# define yacc

runyacc = yacc


#
# define directories (with trailing \)
#
cg_dir=$(build_root)\cg
cc_dir=$(build_root)\cc
pharlap=$(tools_root)\
flashtek=$(tools_root)\x32\
c_dir=$(lang_root)\
misc_h=$(tools_root)\misc_h\
toolsdir=$(tools_root)\
fddir=$(tools_root)\uiforms\
fdos2dir=$(tools_root)\os2forms\
wdisasmdir=$(build_root)\wdisasm\
wldir=$(build_root)\wl\
wvdir=$(build_root)\wv\
trap_dir=$(build_root)\trap
wsampledir=$(build_root)\wsample\
watcomdir=$(build_root)\watcom\

#
# Why the duplicates ?
#
sdk_dir=$(build_root)\sdk
sdkdir=$(build_root)\sdk
wresdir=$(build_root)\sdk\rc\wres
wres_dir=$(build_root)\sdk\rc\wres
#
# define directories (without trailing \)
#

##
## Obsolete - use bin_root instead
##
##bin_dir=$(build_root)\bin
##necbin_dir=$(build_root)\necbin
##fmrbin_dir=$(build_root)\fmrbin
##binp_dir=$(build_root)\binp
##binw_dir=$(build_root)\binw
##binnt_dir=$(build_root)\binnt

#bin_root=$(build_root)\bin
bin_root_wv=$(build_root)\bin
dig_dir=$(build_root)\dig
mad_dir=$(build_root)\mad
dip_dir=$(build_root)\dip
watcom_dir=$(build_root)\watcom
win386dir=$(build_root)\win386
batchdir=$(build_root)\idebatch
wclassdir=$(build_root)\wclass
waxsvr_dir=$(build_root)\waxsvr
uidir=$(build_root)\ui
guidir=$(build_root)\gui
auidir=$(build_root)\aui
altsym_dir=$(build_root)\altsym
posix_dir=$(build_root)\posix
startup=$(build_root)\src\startup
ecsdir=$(tools_root)\ecslib
plsdir=$(tools_root)\dilib
adsdir=$(tools_root)\adslib
rsilib=$(tools_root)\rsilib
nwos2dir=$(tools_root)\nwos2lib
#nwdir=$(tools_root)\nwclib
#nwsrc=$(tools_root)\src
#nw40src=$(tools_root)\nw40src
#nw40dir=$(tools_root)\nw40clib
new_clib=$(build_root)\clib
clibdir=$(new_clib)
new_mlib=$(build_root)\mathlib
rtdll=$(build_root)\rtdll
emu386=$(build_root)\emu
emu286=$(build_root)\emu86
wpi_dir=$(build_root)\wpi
viperdir=$(build_root)\viper
help_dir=$(build_root)\help
browsedir=$(build_root)\browser
guitools_dir=$(online_dir)\hlp
f77_dir=$(build_root)\f77
wl95_dir=$(build_root)\wl95
rcsdll_dir=$(build_root)\rcsdll
nwclass_dir=$(build_root)\nwclass
wv_dir=$(build_root)\wv
ide_dir=$(build_root)\buildeng
ochook_dir=$(build_root)\ochook
objcycle_dir=$(build_root)\objcycle

#
# define substructure of WATCOM project - DON'T ADD MORE. just use watcom_dir
#
wat_utils=$(build_root)\watcom
watcom_nt_h=$(lang_root)\h\nt
watcom_h=$(wat_utils)\h
watcom_lib=$(wat_utils)\lib

datactl_dir=$(tools_root)\datactl
win_h=$(lang_root)\h\win
win31_hdrs=$(win_h)
asm_h=$(wat_utils)\h
ui_h=$(build_root)\ui\h
hdr_proj=$(build_root)\hdr
bld_h=$(hdr_proj)\dos
uiutil_h=$(build_root)\uiforms\util
pen_h=$(hdr_proj)\penpoint
new_qnx_h=$(hdr_proj)\qnx
qnx_h=$(lang_root)\qh
oshdrs=$(watcom_h)
wasmdir=$(build_root)\wasm
dwarfdir=$(build_root)\dwarf
plusplus_dir=$(build_root)\plusplus
plusplus_cpplib_dir = $(plusplus_dir)\cpplib
plusplus_iostream_dir = $(plusplus_dir)\cpplib\iostream
plusplus_complex_dir = $(plusplus_dir)\cpplib\complex
plusplus_string_dir = $(plusplus_dir)\cpplib\string
plusplus_runtime_dir = $(plusplus_dir)\cpplib\runtime
plusplus_contain_dir = $(plusplus_dir)\cpplib\contain
trmem_dir = $(build_root)\trmem
womp_dir = $(build_root)\womp
editdll = $(build_root)\editdll
risc_dir = $(build_root)
disasm_dir = $(build_root)\ndisasm
#
# PENPOINT sdk stuff
#
penpoint_path=$(tools_root)\penpoint

#
# define OS2/DOS bound app stuff
#
binder=$(tools_root)
bindcalls=$(build_root)\watcom\lib\doscalls.lib
doscalls=$(build_root)\watcom\lib\doscalls.lib
apilib=$(build_root)\watcom\lib\api.lib

# Select OS/2 Libs based on use_os2tk_stuff
!ifdef use_os2tk_stuff
os2386=$(os2_toolkit)\lib\os2386.lib
os2286=$(os2_ddk)\base\lib\os2286.lib
!else
os2386=$(lang_root)\lib386\os2386.lib
os2286=$(lang_root)\lib286\os2.lib
!endif

#
# locations of c libraries - used by fortran library build
#
# clibmdos_dir    = $(clibdir)\bcsd\
# clibldos_dir    = $(clibdir)\bcbd\
# clibmos2_dir    = $(clibdir)\2bcsd\
# cliblos2_dir    = $(clibdir)\2bcbd\
# mtlibos2_dir    = $(clibdir)\os2mt\
# clibswin_dir    = $(clibdir)\wscsd\
# clibmwin_dir    = $(clibdir)\wbcsd\
# cliblwin_dir    = $(clibdir)\wbcbd\
# maths286_dir    = $(clibdir)\math\emu\scsd\
# mathm286_dir    = $(clibdir)\math\emu\bcsd\
# mathm287_dir    = $(clibdir)\math\87\bcsd\
# mathl286_dir    = $(clibdir)\math\emu\bcbd\
# mathl287_dir    = $(clibdir)\math\87\bcbd\
# clibr386_dir    = $(clibdir)\ms386r\
# clibs386_dir    = $(clibdir)\ms386s\
# wlibr386_dir    = $(clibdir)\w3r\
# wlibs386_dir    = $(clibdir)\w3s\
# maths386_dir    = $(clibdir)\math\emu\ms386s\
# mathr386_dir    = $(clibdir)\math\emu\ms386r\
# maths387_dir    = $(clibdir)\math\87\ms386s\
# mathr387_dir    = $(clibdir)\math\87\ms386r\
# clibros2_dir    = $(clibdir)\23r\
# clibsos2_dir    = $(clibdir)\23s\
# clibrmt_dir   = $(clibdir)\23rmt\
# clibsmt_dir   = $(clibdir)\23smt\
# clibrdll_dir    = $(clibdir)\23rdll\
# clibsdll_dir    = $(clibdir)\23sdll\
# ntlibr_dir      = $(clibdir)\ntr\
# ntlibrmt_dir    = $(clibdir)\ntrmt\
# ntlibrdll_dir   = $(clibdir)\ntrmt\
# ntlibs_dir      = $(clibdir)\nts\
# ntlibsmt_dir    = $(clibdir)\ntsmt\
# ntlibsdll_dir   = $(clibdir)\ntsmt\
# clibspp_dir     = $(clibdir)\go3s\
# mathspp_dir     = $(clibdir)\math\emu\go3s\
# ovlldr_dir    = $(wldir)ovlldr\
#
# in order to build CLIB (replaces drive.mif/drive386.mif)
#
lib_drv = $(build_root)
inc_drv = $(tools_root)
obj_drv = $(build_root)

#
# for creating on-line help
#
whelp=$(online_dir)\whelp
whpcvt=$(tools_root)
langbk=$(online_dir)\hlp;$(online_dir)\cg;$(online_dir)\gml
gml_root=$(tools_root)\gml
gmllib=$(tools_root)\gml\syslib
windev_dir=$(tools_root)\windev

dwarf_dir = $(build_root)\dwarf
owl_dir = $(risc_dir)\owl
cpp_dir = $(build_root)\cpp
aui_dir = $(build_root)\aui
gui_dir = $(build_root)\gui
ui_dir = $(build_root)\ui
wsample_dir = $(build_root)\wsample

#
#
# Projects that should use autodepend
#
# Check defrule.mif
#
# format is projectname_autodepends
#
cg_autodepends = .AUTODEPEND
cc_version = tree

wlink_autodepends = .AUTODEPEND

